<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="Squadron-Manager">
  <file path="var/www-redirect/index.php" hash="7a2bd369ad756ce9b10c5edd5e846538" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www-redirect/index.php</error>
    </parse_markers>
  </file>
  <file path="var/www/help/inputPercentages.php" hash="ec430e270645b73360bbf990d82f62c7" package="Default">
    <include line="10" type="Include" package="Default">
      <name>header.php</name>
    </include>
    <include line="22" type="Include" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/help/inputPercentages.php</error>
    </parse_markers>
  </file>
  <file path="var/www/help/CPFTcsv.php" hash="f7fe3a76ab9fa9c9e850a06e4eac7631" package="Default">
    <include line="11" type="Require" package="Default">
      <name>header.php</name>
    </include>
    <include line="37" type="Require" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/help/CPFTcsv.php</error>
    </parse_markers>
  </file>
  <file path="var/www/login/attendance/add.php" hash="5ad8eac93f14104e6a93334a64ff7478" package="Squadron-Manager">
    <docblock line="2">
      <description>Enter attendance for an event.</description>
      <long-description>&lt;p&gt;Allows staff to enter attendance and modify current attendance
other pages.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale&#10;POST&#10;search##- search for input field ##&#10;insert- insert the attendance&#10;cap[]- the input capids&#10;GET&#10;capid- the input capid from the search&#10;field- which input to hit&#10;eCode- the event code&#10;SESSION&#10;eCode- the event code&#10;input- the inputs that are saved during a search"/>
    </docblock>
    <include line="39" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="72" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="142" type="Include" package="Default">
      <name>squadManFooter.php</name>
    </include>
    <function namespace="global" line="138" package="Squadron-Manager">
      <name>punchIt</name>
      <full_name>\punchIt</full_name>
      <argument line="138">
        <name>$code</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="138" code="50009">No DocBlock was found for function \punchIt()</error>
    </parse_markers>
  </file>
  <file path="var/www/login/attendance/event.php" hash="77cca5a5431d0f9245aeeaae1fa106b4" package="Default">
    <include line="19" type="Include Once" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="38" type="Include" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="125" type="Include" package="Default">
      <name>squadManFooter.php</name>
    </include>
    <include line="127" type="Include" package="Default">
      <name>footer.php</name>
    </include>
    <function namespace="global" line="46" package="Default">
      <name>report</name>
      <full_name>\report</full_name>
      <argument line="46">
        <name>$eCode</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/login/attendance/event.php</error>
      <error line="46" code="50009">No DocBlock was found for function \report()</error>
    </parse_markers>
  </file>
  <file path="var/www/login/attendance/new.php" hash="f193caeeb7d545cb63f7c97b1175a896" package="Squadron-Manager">
    <docblock line="2">
      <description>Page for creating a new event.</description>
      <long-description>&lt;p&gt;INPUTS
$_POST
"start"-date-input- the start date of the event
end - date-input - the end date for the event
type- drop down menu- the event type meeting, etc
location-drop down menu- the location for the event
name- text- the name for the event
current- checkbox - whether or not this is the current event that members can sign into
attend- checkbox - insert attendance of an event after creation
subevent[]-checkbox array- all the subevents for that event&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
    </docblock>
    <include line="37" type="Include Once" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="50" type="Include" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="326" type="Include" package="Default">
      <name>squadManFooter.php</name>
    </include>
    <function namespace="global" line="232" package="Squadron-Manager">
      <name>insert_Event</name>
      <full_name>\insert_Event</full_name>
      <docblock line="220">
        <description>Inserts the event.</description>
        <long-description></long-description>
        <tag line="220" name="global" description="mysqli $ident the database connection"/>
        <tag line="220" name="param" description="the start date of the event" type="\DateTime" variable="$startDate">
          <type by_reference="false">\DateTime</type>
        </tag>
        <tag line="220" name="param" description="the type of the event" type="String" variable="$type">
          <type by_reference="false">String</type>
        </tag>
        <tag line="220" name="param" description="the name of the event" type="String" variable="$name">
          <type by_reference="false">String</type>
        </tag>
        <tag line="220" name="param" description="whether this is the current event" type="Boolean" variable="$isCurrent">
          <type by_reference="false">Boolean</type>
        </tag>
        <tag line="220" name="param" description="the location of the event" type="String" variable="$locat">
          <type by_reference="false">String</type>
        </tag>
        <tag line="220" name="param" description="the End date of the event or set to the string &quot;null&quot;" type="\type" variable="$endDate">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="220" name="return" description="the event code of the event" type="String">
          <type by_reference="false">String</type>
        </tag>
      </docblock>
      <argument line="232">
        <name>$startDate</name>
        <default></default>
        <type>\DateTime</type>
      </argument>
      <argument line="232">
        <name>$type</name>
        <default></default>
        <type/>
      </argument>
      <argument line="232">
        <name>$name</name>
        <default></default>
        <type/>
      </argument>
      <argument line="232">
        <name>$isCurrent</name>
        <default></default>
        <type/>
      </argument>
      <argument line="232">
        <name>$locat</name>
        <default></default>
        <type/>
      </argument>
      <argument line="232">
        <name>$endDate</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="268" package="Squadron-Manager">
      <name>parse_Sub_events</name>
      <full_name>\parse_Sub_events</full_name>
      <docblock line="262">
        <description>Parses the the sube event input and inserts it</description>
        <long-description></long-description>
        <tag line="262" name="param" description="the Input array, usually $_POST" type="array" variable="$input">
          <type by_reference="false">array</type>
        </tag>
        <tag line="262" name="return" description="an array of the parsed inputs index is order of the input, the content is the subevent code." type="array">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
      <argument line="268">
        <name>$input</name>
        <default></default>
        <type>array</type>
      </argument>
    </function>
    <function namespace="global" line="285" package="Squadron-Manager">
      <name>insert_Subevents</name>
      <full_name>\insert_Subevents</full_name>
      <docblock line="278">
        <description>Takes the input subevent array, and inserts it into the database</description>
        <long-description></long-description>
        <tag line="278" name="global" description="type $ident the database connection"/>
        <tag line="278" name="param" description="the event code of the event that the subevents are for" type="\type" variable="$event_Code">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="278" name="param" description="the subevents that are being inserted" type="array" variable="$subEvents">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
      <argument line="285">
        <name>$event_Code</name>
        <default></default>
        <type/>
      </argument>
      <argument line="285">
        <name>$subEvents</name>
        <default></default>
        <type>array</type>
      </argument>
    </function>
    <function namespace="global" line="303" package="Squadron-Manager">
      <name>insert_other_Subevents</name>
      <full_name>\insert_other_Subevents</full_name>
      <docblock line="296">
        <description>Creates a new type of subevent</description>
        <long-description></long-description>
        <tag line="296" name="global" description="mysqli $ident the database connection"/>
        <tag line="296" name="param" description="the array of new subevents to make" type="array" variable="$subEvents">
          <type by_reference="false">array</type>
        </tag>
        <tag line="296" name="return" description="returns all of the codes of the new created subevents" type="array">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
      <argument line="303">
        <name>$subEvents</name>
        <default></default>
        <type>array</type>
      </argument>
    </function>
  </file>
  <file path="var/www/login/testing/testSignUp.php" hash="c300169e08b194fa69c6888cbf1ce2b7" package="Default">
    <include line="29" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="43" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="189" type="Include" package="Default">
      <name>squadManFooter.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/login/testing/testSignUp.php</error>
    </parse_markers>
  </file>
  <file path="var/www/login/testing/promotionSign.php" hash="ab3544cae4911afd03f4774ff94adf8f" package="Squadron-Manager">
    <docblock line="2">
      <description>Displays all promotion requests, and the neccessary promotion requirements, and if they are passed.</description>
      <long-description>&lt;p&gt;It also allows staff to modify the promotion record for that promotion, and approve the promotion thereof.&lt;/p&gt;

&lt;p&gt;INPUTS
$_POST
filter - the member type to limit the report to
save- saves the inputs
the input from the promotion record function
Session
memberType= the type of member limited to
approve- can approve the promotions&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale"/>
    </docblock>
    <include line="36" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="64" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="101" type="Require" package="Default">
      <name>squadManFooter.php</name>
    </include>
  </file>
  <file path="var/www/login/testing/promoRecord.php" hash="778b54e238e255d82840cc7b7fd06f8a" package="Squadron-Manager">
    <docblock line="2">
      <description>Displays the promotion record for one member, and allows the record to be
edited.</description>
      <long-description>&lt;p&gt;INPUTS
$_GET
capid- the capid of the member to be reported
$_POST
submit- saves the inputs
the input from the promotion record function&lt;/p&gt;

&lt;p&gt;SESSION
microscope- the member who's report is being edited
header- the test types being displayed&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale"/>
    </docblock>
    <include line="38" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="77" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="97" type="Require" package="Default">
      <name>squadManFooter.php</name>
    </include>
  </file>
  <file path="var/www/login/testing/ptCSV.php" hash="4af6c77a07d926beab3e1108cff757b6" package="Squadron-manager">
    <docblock line="2">
      <description>Creates a downloadable csv of the pt testing sign-up</description>
      <long-description></long-description>
      <tag line="2" name="package" description="Squadron-manager"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale"/>
    </docblock>
    <include line="24" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
  </file>
  <file path="var/www/login/testing/promoBoard.php" hash="5ac1494f7a71cc7c36abbf86630559ed" package="Squadron-Manager">
    <docblock line="2">
      <description>Enter a cadet Promotion_board</description>
      <long-description>&lt;p&gt;This allows stafff to enter a promotion board, search a cadet's promotion board,
and view promotion board sign-ups.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale&#10;$_GET&#10;capid- the person's board&#10;date- the date of the promotion board&#10;field-&quot;search&quot; finding past ones &quot;enter&quot; enter a promo board &quot;pres&quot; the board president&#10;$_POST&#10;capid-the boardee&#10;approve- the board is approved&#10;*date*date- the date of the promotion board&#10;*date*next- the next board date&#10;pres- the board president&#10;save- save it&#10;searchM- search for the member&#10;searchP- search for the board president"/>
    </docblock>
    <include line="42" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="107" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="191" type="Require" package="Default">
      <name>squadManFooter.php</name>
    </include>
  </file>
  <file path="var/www/login/testing/PTtest.php" hash="78f49775328682d5b52006131dea0d41" package="Squadron-manager">
    <docblock line="2">
      <description>Handles all pt testing tasks, except for handling uploaded csv pt test files</description>
      <long-description>&lt;p&gt;This will handle viewing PT test sign-ups, creating PT test csv files, and entering individual PT tests&lt;/p&gt;

&lt;p&gt;Input
$_GET
capid the individual who the test is for
achiev the code they are testing for
multi 0 is for individual 1 is for testing signup
upload 0 if uploading files 1 when the file has been uploaded
field the field the capid is for- tester the tester testee the testee&lt;/p&gt;

&lt;p&gt;$_POST
capid the person (text)
tester the capid of the tester
*TEST_CODE* the input for the CPFT test (text)
search clicking on search for jumping to member search (submit)
save saves the input (submit)
*capid* the pass/fail of the member pass=passed fail=failed (radio)
waive[$i]=*capid* waiving the cpft for the capid (checkbox)&lt;/p&gt;

&lt;p&gt;$_SESSION
date- the date of the test
achiev- the achievement an individual test is for
capid- the capid of the testee
tester- the capid of the tester&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-manager"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale"/>
    </docblock>
    <include line="50" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="186" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="397" type="Require" package="Default">
      <name>squadManFooter.php</name>
    </include>
  </file>
  <file path="var/www/login/testing/cadetOath.php" hash="648d06b80c2d432d61a44a002f8ec359" package="Squadron-Manager">
    <docblock line="2">
      <description>Allow flight staff to enter cadet oath and grooming standards.</description>
      <long-description>&lt;p&gt;other pages.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale&#10;$_get&#10;capid- the capid from the search&#10;$_post&#10;capid- the capid of the member&#10;*date*- the date input&#10;search- search for the member&#10;passed[]- the checkbox for the items to be entered CO- cadet oath GS- grooming standards&#10;save- save the input&#10;find- find the member"/>
    </docblock>
    <include line="33" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="86" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="101" type="Require" package="Default">
      <name>squadManFooter.php</name>
    </include>
  </file>
  <file path="var/www/login/testing/onlineTesting.php" hash="e6deda7fba750a8dbef42a2413500d31" package="Squadron-Manager">
    <docblock line="2">
      <description>Allows Users to enter the online testing from eservices.</description>
      <long-description>&lt;p&gt;First allows the user to find the member, then displays the possibilities for
entry and allows the user to enter them&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale&#10;$_GET&#10;capid&#10;$_POST&#10;passed[]- all the passed tests the value is the test code&#10;*date**type_code*- the date passed&#10;percentage*type_code* - the percentage"/>
    </docblock>
    <include line="35" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="74" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="120" type="Require" package="Default">
      <name>squadManFooter.php</name>
    </include>
  </file>
  <file path="var/www/login/reporting/eservReport.php" hash="da2b43b954ab694ca0e5936563a7a3be" package="Squadron-Manager">
    <docblock line="2">
      <description>This creates a report for things to be inserted into eservices
other pages.</description>
      <long-description></long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale&#10;$_post&#10;remove- mark as on eservices"/>
    </docblock>
    <include line="26" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="116" type="Require" package="Default">
      <name>report_footer.php</name>
    </include>
  </file>
  <file path="var/www/login/reporting/emergency_contact.php" hash="4f408d01b5c61992819bce346f1d347c" package="Squadron-Manager">
    <docblock line="2">
      <description>Creates a report of all current members' contact information</description>
      <long-description></long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
    </docblock>
    <include line="24" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="53" type="Include" package="Default">
      <name>report_footer.php</name>
    </include>
  </file>
  <file path="var/www/login/discipline/details.php" hash="0a4f65495b3c8c37f783ecf3a246dbe7" package="Default">
    <include line="19" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="32" type="Include" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/login/discipline/details.php</error>
    </parse_markers>
  </file>
  <file path="var/www/login/logout.php" hash="69512c9c0722eafe19a448dcaa454e26" package="Default">
    <include line="22" type="Require" package="Default">
      <name>projectFunctions.php</name>
      <docblock line="2">
        <description>This file logs members out, by destroying their session.</description>
        <long-description>&lt;p&gt;It also logs the time that they signed out at&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/login/logout.php</error>
    </parse_markers>
  </file>
  <file path="var/www/login/member/termMembership.php" hash="4121cac0c3ae02bea1ab9748c357172d" package="Squadron-Manager">
    <docblock line="2">
      <description>Allows users to review memberships that are up for renewal, and terminate memberships.</description>
      <long-description></long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale&#10;$_GET&#10;mass- saves the changes based on membership renewal&#10;*capid*- R to renew for a member T to terminate&#10;term- terminate a single member"/>
    </docblock>
    <include line="29" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="87" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="125" type="Require" package="Default">
      <name>squadManFooter.php</name>
    </include>
  </file>
  <file path="var/www/login/member/approve.php" hash="598677107263557b89ad69f63f4028b7" package="Default">
    <include line="19" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="32" type="Include" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/login/member/approve.php</error>
    </parse_markers>
  </file>
  <file path="var/www/login/member/report.php" hash="c7ace94a822a1e54253223d084185023" package="Default">
    <include line="19" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="33" type="Include" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="74" type="Include" package="Default">
      <name>squadManFooter.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/login/member/report.php</error>
    </parse_markers>
  </file>
  <file path="var/www/login/member/search.php" hash="cbfdb0425547cc025762486495012fad" package="Default">
    <include line="30" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="200" type="Include" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="237" type="Include" package="Default">
      <name>squadManFooter.php</name>
    </include>
    <function namespace="global" line="50" package="Default">
      <name>checkPath</name>
      <full_name>\checkPath</full_name>
    </function>
    <function namespace="global" line="65" package="Default">
      <name>search</name>
      <full_name>\search</full_name>
    </function>
    <function namespace="global" line="158" package="Default">
      <name>prepDisplay</name>
      <full_name>\prepDisplay</full_name>
      <argument line="158">
        <name>$results_sorted</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="215" package="Default">
      <name>displayResults</name>
      <full_name>\displayResults</full_name>
      <argument line="215">
        <name>$display</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/login/member/search.php</error>
      <error line="50" code="50009">No DocBlock was found for function \checkPath()</error>
      <error line="65" code="50009">No DocBlock was found for function \search()</error>
      <error line="158" code="50009">No DocBlock was found for function \prepDisplay()</error>
      <error line="215" code="50009">No DocBlock was found for function \displayResults()</error>
    </parse_markers>
  </file>
  <file path="var/www/login/member/finalApprove.php" hash="fb3158ee35d8aba788f92732f2de4cb1" package="Default">
    <include line="19" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="32" type="Include" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/login/member/finalApprove.php</error>
    </parse_markers>
  </file>
  <file path="var/www/login/index.php" hash="8b01d7a1be1b96ab2919c9aef6c310f2" package="Default">
    <include line="19" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="87" type="Include" package="Default">
      <name>header.php</name>
    </include>
    <include line="172" type="Include" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/login/index.php</error>
    </parse_markers>
  </file>
  <file path="var/www/login/encrypt.php" hash="b0ede259fc0713251ae4c5f9a81b06a5" package="Default">
    <include line="6" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <function namespace="global" line="12" package="Default">
      <name>hash_password</name>
      <full_name>\hash_password</full_name>
      <argument line="12">
        <name>$pass</name>
        <default></default>
        <type/>
      </argument>
      <argument line="12">
        <name>$salt</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/login/encrypt.php</error>
      <error line="12" code="50009">No DocBlock was found for function \hash_password()</error>
    </parse_markers>
  </file>
  <file path="var/www/login/adminis/deleteRecord.php" hash="21dad18034f2b3efa7d6167fcf0af89b" package="Squadron-Manager">
    <docblock line="2">
      <description>Allows users to delete all the records of a member</description>
      <long-description>&lt;p&gt;This doesn't allow a single member to delete it, but requires two members of
the command staff to confirm, also it must be at least five years after member
termination.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale&#10;$_POST&#10;delete- submit the delete request&#10;*capid* - the confirmation checkbox&#10;L*capid*- the legal confirmation checkbox&#10;R+ the above- the same thing as above, except for placing requests for deletion of records&#10;$_SESSION&#10;request- an array of members to be requested&#10;delete- members to be completely deleted."/>
    </docblock>
    <include line="36" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="79" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="151" type="Require" package="Default">
      <name>squadManFooter.php</name>
    </include>
  </file>
  <file path="var/www/login/adminis/pswdChange.php" hash="29c50164170196c3943d048a8c556455" package="Squadron-Manager">
    <docblock line="2">
      <description>Allows users to change their password
$_POST
current- the user's current password
new- the new password
repeat- the password repeated</description>
      <long-description></long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
    </docblock>
    <include line="28" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="64" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="119" type="Require" package="Default">
      <name>squadManFooter.php</name>
    </include>
  </file>
  <file path="var/www/login/adminis/finishRecordDel.php" hash="38cde9706ef96ee9b290bc12b4de48b6" package="Squadron-Manager">
    <docblock line="2">
      <description>Finishes the deleting of a member.</description>
      <long-description>&lt;p&gt;Is passed session information from deleteRecord.php, and also login information
once the user has been verified again the deletes will be made.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale"/>
    </docblock>
    <include line="26" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="44" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="117" type="Require" package="Default">
      <name>squadManFooter.php</name>
    </include>
  </file>
  <file path="var/www/login/adminis/loginLog.php" hash="af4e5e06add4d2bd503d23e2cc4602bf" package="Squadron-Manager">
    <docblock line="2">
      <description>This views login logs and account locks</description>
      <long-description>&lt;p&gt;This allows the user to see the login logs, and he account locks
and allows the user to remove account locks.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale&#10;$_GET&#10;lock-view the account lock outs&#10;page- the page of the results to see&#10;$_POST&#10;done- the submit button to remove the input&#10;remove[]- the value of the capid of the lock to remove&#10;*date*start- the start of the date range&#10;*date*end- the end of the date range&#10;capid- the capid to focus on&#10;ip - th ip address&#10;login- the failed logins"/>
    </docblock>
    <include line="40" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="113" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="216" type="Require" package="Default">
      <name>squadManFooter.php</name>
    </include>
  </file>
  <file path="var/www/login/adminis/clearLog.php" hash="3294178b641e6646580fb0b5a159bc54" package="Squadron-Manager">
    <docblock line="2">
      <description>Request the system logs to be cleared</description>
      <long-description>&lt;p&gt;Doesn't actually do anything that is handed off to another page, this just processes
the input, and requires them to resign-in.
other pages.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale&#10;$_POST&#10;clear[]-the logs to clear&#10;request- request the deletion&#10;$_Session&#10;auditT- tentative aprove of clearing audit logs, pending proper sign-in&#10;login_clearT- '' except login log&#10;authenticated- whether or not the user is authenticated"/>
    </docblock>
    <include line="36" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="90" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="168" type="Require" package="Default">
      <name>squadManFooter.php</name>
    </include>
  </file>
  <file path="var/www/login/adminis/auditLog.php" hash="07b6d44c95c8e4aa2e395d30e5fc25b3" package="Squadron-Manager">
    <docblock line="2">
      <description>Allows staff to view the system audit log.</description>
      <long-description></long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale&#10;$_GET&#10;page- the page of results to view&#10;time- the timestamp of the unique id for the event&#10;$_POST&#10;filter- filer the data and sort it&#10;sortBy- the drop down to sort by&#10;     ti- time&#10;     int- intrusion type&#10;     pa- the page&#10;     ip- ip address&#10;Order- weather to order hi to low or vise versa&#10;     hi-high to low&#10;     low- low to high&#10;*date*start- the start of the date range&#10;*date*end- the end of the date ranger&#10;intrusion- the type of the event to filter by&#10;ip - the ip address to narrow it by&#10;notific- check box to show only new events&#10;notif- button to remove from notifications&#10;$_SESSION&#10;order_by- the order by clause for the query&#10;order- the requested input for the order by cluase hi-lo vise versa&#10;sortBy- &quot;&quot; which field to sort by&#10;startDate- the start of the date range&#10;end- the end of the date range&#10;where- the where cluase&#10;fitler- the filter criteria by event type&#10;ip- the ip address to search for&#10;notif- whether or not to show only new"/>
    </docblock>
    <include line="57" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="155" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="306" type="Require" package="Default">
      <name>squadManFooter.php</name>
    </include>
  </file>
  <file path="var/www/login/adminis/staffPerm.php" hash="04936a299ce6d3bec4d7024e55813462" package="Squadron-Manager">
    <docblock line="2">
      <description>Alter a staff member's permissions</description>
      <long-description>&lt;p&gt;This pages allow system admins to change the staff positions held by a staff member
and give them special permissions on single taks
other pages.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale&#10;$_SESSION&#10;staffer- the staff member being altered&#10;$_GET&#10;capid- from the member search&#10;$_POST&#10;find-finds a member by the capid&#10;search-go to member search&#10;save- save the changes&#10;pos[]- the positions they hold&#10;perm[]-the special permissions"/>
    </docblock>
    <include line="42" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="96" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="185" type="Require" package="Default">
      <name>squadManFooter.php</name>
    </include>
  </file>
  <file path="var/www/login/adminis/deleteIt.php" hash="b2f6396174c5e487962aa0cfe63e4fc3" package="Squadron-Manager">
    <docblock line="2">
      <description>Request the system logs to be cleared finalizes</description>
      <long-description>&lt;p&gt;This is the page that the requests are handed off to, and the actual
DB queries.
other pages.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale&#10;$_Session&#10;audit- aprove of clearing audit logs, pending proper sign-in&#10;login_clear- '' except login log&#10;authenticated- whether or not the user is authenticated"/>
    </docblock>
    <include line="33" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="104" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="110" type="Require" package="Default">
      <name>squadManFooter.php</name>
    </include>
  </file>
  <file path="var/www/login/adminis/newMember.php" hash="d3c4e1098ef159561c6bf41d9b60ee00" package="Squadron-Manager">
    <docblock line="2">
      <description>Page for creating new staff members</description>
      <long-description>&lt;p&gt;Creates a new member or promotes a member to being a staff member
Creates their password, and gives them staff duties&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale&#10;$_GET&#10;capid- from the member search&#10;phase- the phase it's in 1- is set up member 2- set password, and staff positions&#10;$_POST&#10;CAPID- the CAPID of the new member&#10;Lname-the Member's Last Name&#10;Fname-member's First name&#10;Gender- the member's Gener&#10;*date*DoB- member's Date of Birth&#10;achiev- the member's current achievement for grade&#10;member - membership type&#10;text- the textbook set they use&#10;unit- the member's home unit&#10;*date*DoJ- the member's date of joining.&#10;phase2&#10;new- the new password&#10;repeat- the password repeated&#10;pos[]- the staff positions selected"/>
    </docblock>
    <include line="47" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="121" type="Require" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="209" type="Require" package="Default">
      <name>squadManFooter.php</name>
    </include>
  </file>
  <file path="var/www/login/endSession.php" hash="5cfd29c21403c4f93a27d1663aaefb5a" package="Default">
    <include line="12" type="Require" package="Default">
      <name>header.php</name>
    </include>
    <include line="16" type="Require" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/login/endSession.php</error>
    </parse_markers>
  </file>
  <file path="var/www/login/reSignIn.php" hash="b78823a33f7f976a943ae6d768f193a4" package="Default">
    <include line="19" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="61" type="Include" package="Default">
      <name>header.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/login/reSignIn.php</error>
    </parse_markers>
  </file>
  <file path="var/www/login/home.php" hash="1995d916c5c947bba620cd712d7f99a1" package="Squadron-manager">
    <docblock line="2">
      <description>Displays the home page for the login section.</description>
      <long-description>&lt;p&gt;Also displays notifications of important things such as test sign ups and security breaches
These notifications are based on the tasks they are able to use. This uses a class
which content is created from a csv outside the document root&lt;/p&gt;

&lt;p&gt;No Inputs&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-manager"/>
    </docblock>
    <include line="29" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="43" type="Include" package="Default">
      <name>squadManHeader.php</name>
    </include>
    <include line="213" type="Include" package="Default">
      <name>squadManFooter.php</name>
    </include>
    <function namespace="global" line="89" package="Squadron-manager">
      <name>compare_notif</name>
      <full_name>\compare_notif</full_name>
      <docblock line="82">
        <description>Compares notifications to sort by presidence</description>
        <long-description></long-description>
        <tag line="82" name="param" description="first one" type="\notification" variable="$a">
          <type by_reference="false">\notification</type>
        </tag>
        <tag line="82" name="param" description="second one" type="\notification" variable="$b">
          <type by_reference="false">\notification</type>
        </tag>
        <tag line="82" name="return" description="standard usort method returns" type="int">
          <type by_reference="false">int</type>
        </tag>
      </docblock>
      <argument line="89">
        <name>$a</name>
        <default></default>
        <type>\notification</type>
      </argument>
      <argument line="89">
        <name>$b</name>
        <default></default>
        <type>\notification</type>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="global" line="116" package="Default">
      <extends/>
      <name>notification</name>
      <full_name>\notification</full_name>
      <docblock line="94">
        <description>The class for notifications for a user.</description>
        <long-description>&lt;p&gt;The notifications are associated with a staff task from the table TASKS
these are the pages the staff allowed to see.
If a staff member has permissions for that task he will have that notication.&lt;/p&gt;

&lt;p&gt;The display string of the text has a special syntax.  Any normal text will be simply displayed
to display a query result enclose the column name (if renamed use the renamed column name) in **
Only the first row (0) will be used&lt;/p&gt;

&lt;p&gt;if the column name contains DATE it will be parsed as a dateTime, and will follow the display constants for this project&lt;/p&gt;

&lt;p&gt;i.e. There are &lt;em&gt;COUNT&lt;/em&gt; testing requests
There was a request by &lt;em&gt;REQUEST_NAME&lt;/em&gt; to clear the system log on &lt;em&gt;DATE&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Presidence scale: 0-3
0: high priority- security breech
1: System administration needed
2:High-priority membership administration
3:low-priority membership administration&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="117" namespace="global" package="Default">
        <name>$query</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="118" namespace="global" package="Default">
        <name>$display_text</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="119" namespace="global" package="Default">
        <name>$presidence</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="120" namespace="global" package="Default">
        <name>$display</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="121" namespace="global" package="Default">
        <name>$results</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="122" namespace="global" package="Default">
        <name>$task_code</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="142" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="123">
          <description>Creates a new notification object</description>
          <long-description>&lt;p&gt;WARNING:INPUT cannot be cleaned because queries are being parsed. Do not create a notification from
user input, use ONLY input from the csv file&lt;/p&gt;</long-description>
          <tag line="123" name="param" description="-the query to run" type="String" variable="$query">
            <type by_reference="false">String</type>
          </tag>
          <tag line="123" name="param" description="text - the text to be displayed with special syntax&#10;* The display string of the text has a special syntax.  Any normal text will be simply displayed&#10;to display a query result enclose the column name (if renamed use the renamed column name) in **&#10;Only the first row (0) will be used&#10;if the column name contains DATE it will be parsed as a dateTime, and will follow the display constants for this project&#10;i.e. There are *COUNT* testing requests&#10;There was a request by *REQUEST_NAME* to clear the system log on *DATE*." type="String" variable="$text">
            <type by_reference="false">String</type>
          </tag>
          <tag line="123" name="param" description="- the presidence of the notification 0-3 scale" type="int" variable="$prior">
            <type by_reference="false">int</type>
          </tag>
          <tag line="123" name="param" description="-the task code for this notification from the database" type="string" variable="$code">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
        <argument line="142">
          <name>$text</name>
          <default></default>
          <type/>
        </argument>
        <argument line="142">
          <name>$prior</name>
          <default></default>
          <type/>
        </argument>
        <argument line="142">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="158" package="Default">
        <name>check_display</name>
        <full_name>check_display</full_name>
        <docblock line="148">
          <description>Checks if this notification has anything to display.</description>
          <long-description>&lt;p&gt;It also runs the query and preps for the display.&lt;/p&gt;

&lt;p&gt;WARNING: Do not use the User's database connection use the sandboxed one
instead.  These will be executing queries that may be tampered with.&lt;/p&gt;</long-description>
          <tag line="148" name="param" description="the database connection of the SANDBOXED user" type="\mysqli" variable="$idnet">
            <type by_reference="false">\mysqli</type>
          </tag>
          <tag line="148" name="return" description="true if this will be displayed, false otherwise" type="\boolean-Returns">
            <type by_reference="false">\boolean-Returns</type>
          </tag>
        </docblock>
        <argument line="158">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="173" package="Default">
        <name>get_presid</name>
        <full_name>get_presid</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="181" package="Default">
        <name>display</name>
        <full_name>display</full_name>
        <docblock line="176">
          <description>Displays the actual link if it needs to</description>
          <long-description></long-description>
          <tag line="176" name="param" description="the database connection" type="\mysqli" variable="$ident">
            <type by_reference="false">\mysqli</type>
          </tag>
        </docblock>
        <argument line="181">
          <name>$ident</name>
          <default></default>
          <type>\mysqli</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="117" code="50018">No DocBlock was found for property $query</error>
      <error line="118" code="50018">No DocBlock was found for property $display_text</error>
      <error line="119" code="50018">No DocBlock was found for property $presidence</error>
      <error line="120" code="50018">No DocBlock was found for property $display</error>
      <error line="121" code="50018">No DocBlock was found for property $results</error>
      <error line="122" code="50018">No DocBlock was found for property $task_code</error>
      <error line="148" code="50014">Name of argument $ident does not match with the DocBlock's name $idnet in check_display()</error>
      <notice line="148" code="50013">Parameter $idnet could not be found in check_display()</notice>
      <error line="173" code="50010">No DocBlock was found for method get_presid()</error>
    </parse_markers>
  </file>
  <file path="var/www/authors.php" hash="ad90bd36c411d6328e53f0f78f7176db" package="Default">
    <include line="10" type="Include" package="Default">
      <name>header.php</name>
    </include>
    <include line="23" type="Include" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/authors.php</error>
    </parse_markers>
  </file>
  <file path="var/www/licensing.php" hash="f2a5df6cf0c466ee6c3743ac64dbfd28" package="Default">
    <include line="9" type="Include" package="Default">
      <name>header.php</name>
    </include>
    <include line="28" type="Include" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/licensing.php</error>
    </parse_markers>
  </file>
  <file path="var/www/visitor/finishVisit.php" hash="5deeae9a1d6bd1fb52e85b65a05448da" package="Default">
    <include line="29" type="Include" package="Default">
      <name>header.php</name>
    </include>
    <include line="30" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="44" type="Include" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/visitor/finishVisit.php</error>
    </parse_markers>
  </file>
  <file path="var/www/visitor/complete.php" hash="b163163f6adbd977f6cda50efd3fa5f7" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/visitor/complete.php</error>
    </parse_markers>
  </file>
  <file path="var/www/visitor/visitor.php" hash="e1a6c977dd3dd4c21a0d948449cf7e3f" package="Default">
    <include line="29" type="Include" package="Default">
      <name>header.php</name>
    </include>
    <include line="30" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/visitor/visitor.php</error>
    </parse_markers>
  </file>
  <file path="var/www/index.php" hash="3b581bff544401aee2ce74aa1c376ec6" package="Default">
    <include line="35" type="Include" package="Default">
      <name>header.php</name>
    </include>
    <include line="36" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="106" type="Include" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/index.php</error>
    </parse_markers>
  </file>
  <file path="var/www/legal.php" hash="daf1653216ca9f444fd17afcbed2e051" package="Default">
    <include line="9" type="Include" package="Default">
      <name>header.php</name>
    </include>
    <include line="24" type="Include" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/legal.php</error>
    </parse_markers>
  </file>
  <file path="var/www/pictures/profile/getter.php" hash="ac5954accfbf2dc3c52ce2e37d261991" package="Squadron-manager">
    <docblock line="2">
      <description>A secure way to see pictures on the server</description>
      <long-description>&lt;p&gt;All sensetive pictures (profile pictures) go through here so only people who should see pictures can
prevents from wandering through the pictures without a logon&lt;/p&gt;

&lt;p&gt;$_GET
CAPID-the capid of the member to see the picture&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-manager"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale"/>
    </docblock>
    <include line="30" type="Require" package="Default">
      <name>projectFunctions.php</name>
    </include>
  </file>
  <file path="var/www/signIn/promotionReport.php" hash="73767abf5854706c362deec229be1dac" package="Default">
    <include line="30" type="Include" package="Default">
      <name>header.php</name>
    </include>
    <include line="31" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="44" type="Include" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/signIn/promotionReport.php</error>
    </parse_markers>
  </file>
  <file path="var/www/signIn/addContact.php" hash="59108128b1dee3f057e84314fc873d07" package="Default">
    <include line="30" type="Include" package="Default">
      <name>header.php</name>
    </include>
    <include line="31" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="54" type="Include" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/signIn/addContact.php</error>
    </parse_markers>
  </file>
  <file path="var/www/signIn/finishEdit.php" hash="46cb17b7cd41924e1962328051feabc1" package="Default">
    <include line="30" type="Include" package="Default">
      <name>header.php</name>
    </include>
    <include line="31" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="54" type="Include" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/signIn/finishEdit.php</error>
    </parse_markers>
  </file>
  <file path="var/www/signIn/logout.php" hash="2e5c0fb838eae2f41bd23f08e437c78c" package="Default">
    <include line="26" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/signIn/logout.php</error>
    </parse_markers>
  </file>
  <file path="var/www/signIn/index.php" hash="a3ace13b9b5ddf9ed60f5adfbad14cfe" package="Default">
    <include line="30" type="Include" package="Default">
      <name>header.php</name>
    </include>
    <include line="31" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="75" type="Include" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/signIn/index.php</error>
    </parse_markers>
  </file>
  <file path="var/www/signIn/newMember.php" hash="016028cfe56dc245d6fe3272fa24c1b3" package="Default">
    <include line="29" type="Include" package="Default">
      <name>header.php</name>
    </include>
    <include line="30" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="81" type="Include" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/signIn/newMember.php</error>
    </parse_markers>
  </file>
  <file path="var/www/signIn/finishSignin.php" hash="de5eb4f0b43bcefdd0e81d7e5cbba5d5" package="Default">
    <include line="30" type="Include" package="Default">
      <name>header.php</name>
    </include>
    <include line="31" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="52" type="Include" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/signIn/finishSignin.php</error>
    </parse_markers>
  </file>
  <file path="var/www/signIn/addUnit.php" hash="e36161dbba7cf6c1231ddabbfed48195" package="Default">
    <include line="30" type="Include" package="Default">
      <name>header.php</name>
    </include>
    <include line="31" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="48" type="Include" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/signIn/addUnit.php</error>
    </parse_markers>
  </file>
  <file path="var/www/signIn/edit.php" hash="076df33be637e3e3c1ea831a3a170fe5" package="Default">
    <include line="11" type="Include" package="Default">
      <name>header.php</name>
    </include>
    <include line="12" type="Include" package="Default">
      <name>projectFunctions.php</name>
    </include>
    <include line="26" type="Include" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file var/www/signIn/edit.php</error>
    </parse_markers>
  </file>
  <file path="usr/share/squadMan/footer.php" hash="b5b1c9de2530c31a354d8b63634b9467" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file usr/share/squadMan/footer.php</error>
    </parse_markers>
  </file>
  <file path="usr/share/squadMan/header.php" hash="ff6fa19eba5d2f4202da9110357a5f5f" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file usr/share/squadMan/header.php</error>
    </parse_markers>
  </file>
  <file path="usr/share/squadMan/squadManFooter.php" hash="f096e675e709d1bf4f33c97240416a8a" package="Default">
    <include line="7" type="Include" package="Default">
      <name>footer.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file usr/share/squadMan/squadManFooter.php</error>
    </parse_markers>
  </file>
  <file path="usr/share/squadMan/squadManHeader.php" hash="a0982a713f6063f096a43cf51e5d5f72" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file usr/share/squadMan/squadManHeader.php</error>
    </parse_markers>
  </file>
  <file path="usr/share/squadMan/report_footer.php" hash="80b1041caba2525e559a82b0dd588b42" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file usr/share/squadMan/report_footer.php</error>
    </parse_markers>
  </file>
  <file path="usr/share/squadMan/projectFunctions.php" hash="4bd0cd8fdbdc16ad4eb4e7c03f684e15" package="Squadron-Manager">
    <docblock line="2">
      <description>The main API file for the project</description>
      <long-description>&lt;p&gt;All the APIs for the project.  This is never directly displayed, nor can,
but is included in the all the pages, and its functions are invoked by the
other pages.&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="Squadron-Manager"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl.txt GNU GPL V3"/>
      <tag line="2" name="copyright" description="(c) 2013, Micah Gale"/>
    </docblock>
    <constant namespace="global" line="68" package="Squadron-Manager">
      <name>PHP_DATE_FORMAT</name>
      <full_name>\PHP_DATE_FORMAT</full_name>
      <value>$input['date_format']</value>
    </constant>
    <constant namespace="global" line="69" package="Squadron-Manager">
      <name>PHP_TIMESTAMP_FORMAT</name>
      <full_name>\PHP_TIMESTAMP_FORMAT</full_name>
      <value>PHP_DATE_FORMAT . " " . $input['time_format']</value>
    </constant>
    <constant namespace="global" line="70" package="Squadron-Manager">
      <name>CSV_SAVE_PATH</name>
      <full_name>\CSV_SAVE_PATH</full_name>
      <value>$input['csv_path']</value>
    </constant>
    <constant namespace="global" line="71" package="Squadron-Manager">
      <name>PROFILE_PATH</name>
      <full_name>\PROFILE_PATH</full_name>
      <value>$input['profile_path']</value>
    </constant>
    <constant namespace="global" line="72" package="Squadron-Manager">
      <name>BAD_LOGIN_WAIT</name>
      <full_name>\BAD_LOGIN_WAIT</full_name>
      <value>$input['login_wait']</value>
    </constant>
    <constant namespace="global" line="73" package="Squadron-Manager">
      <name>LOCK_TIME</name>
      <full_name>\LOCK_TIME</full_name>
      <value>$input['lock_time']</value>
    </constant>
    <constant namespace="global" line="74" package="Squadron-Manager">
      <name>MAX_LOGIN</name>
      <full_name>\MAX_LOGIN</full_name>
      <value>$input['lock_count']</value>
    </constant>
    <constant namespace="global" line="75" package="Squadron-Manager">
      <name>PASSWORD_LIFE</name>
      <full_name>\PASSWORD_LIFE</full_name>
      <value>$input['password_life']</value>
    </constant>
    <constant namespace="global" line="76" package="Squadron-Manager">
      <name>PASSWORD_NOTIF</name>
      <full_name>\PASSWORD_NOTIF</full_name>
      <value>$input['password_notif']</value>
    </constant>
    <constant namespace="global" line="77" package="Squadron-Manager">
      <name>LOG_PER_PAGE</name>
      <full_name>\LOG_PER_PAGE</full_name>
      <value>$input['log_per_page']</value>
    </constant>
    <constant namespace="global" line="79" package="Squadron-Manager">
      <name>PHP_DATE_FORMAT</name>
      <full_name>\PHP_DATE_FORMAT</full_name>
      <value>"d M y"</value>
    </constant>
    <constant namespace="global" line="80" package="Squadron-Manager">
      <name>PHP_TIMESTAMP_FORMAT</name>
      <full_name>\PHP_TIMESTAMP_FORMAT</full_name>
      <value>PHP_DATE_FORMAT . " H:i:s"</value>
    </constant>
    <constant namespace="global" line="81" package="Squadron-Manager">
      <name>CSV_SAVE_PATH</name>
      <full_name>\CSV_SAVE_PATH</full_name>
      <value>"/var/upload/csv"</value>
    </constant>
    <constant namespace="global" line="82" package="Squadron-Manager">
      <name>PROFILE_PATH</name>
      <full_name>\PROFILE_PATH</full_name>
      <value>"/var/upload/profile"</value>
    </constant>
    <constant namespace="global" line="83" package="Squadron-Manager">
      <name>BAD_LOGIN_WAIT</name>
      <full_name>\BAD_LOGIN_WAIT</full_name>
      <value>5</value>
    </constant>
    <constant namespace="global" line="87" package="Squadron-Manager">
      <name>LOCK_TIME</name>
      <full_name>\LOCK_TIME</full_name>
      <value>"00:30:00"</value>
    </constant>
    <constant namespace="global" line="91" package="Squadron-Manager">
      <name>MAX_LOGIN</name>
      <full_name>\MAX_LOGIN</full_name>
      <value>8</value>
    </constant>
    <constant namespace="global" line="95" package="Squadron-Manager">
      <name>PASSWORD_LIFE</name>
      <full_name>\PASSWORD_LIFE</full_name>
      <value>180</value>
    </constant>
    <constant namespace="global" line="99" package="Squadron-Manager">
      <name>PASSWORD_NOTIF</name>
      <full_name>\PASSWORD_NOTIF</full_name>
      <value>14</value>
    </constant>
    <constant namespace="global" line="100" package="Squadron-Manager">
      <name>LOG_PER_PAGE</name>
      <full_name>\LOG_PER_PAGE</full_name>
      <value>40</value>
    </constant>
    <constant namespace="global" line="105" package="Squadron-Manager">
      <name>PHP_TO_MYSQL_FORMAT</name>
      <full_name>\PHP_TO_MYSQL_FORMAT</full_name>
      <value>"Y-m-d"</value>
    </constant>
    <constant namespace="global" line="109" package="Squadron-Manager">
      <name>SQL_INSERT_DATE_TIME</name>
      <full_name>\SQL_INSERT_DATE_TIME</full_name>
      <value>"o-m-d H:i:s"</value>
    </constant>
    <constant namespace="global" line="110" package="Squadron-Manager">
      <name>EVENT_CODE_DATE</name>
      <full_name>\EVENT_CODE_DATE</full_name>
      <value>'dMy'</value>
    </constant>
    <constant namespace="global" line="111" package="Squadron-Manager">
      <name>CPFT_RUNNING_REQ</name>
      <full_name>\CPFT_RUNNING_REQ</full_name>
      <value>1</value>
    </constant>
    <constant namespace="global" line="112" package="Squadron-Manager">
      <name>CPFT_OTHER_REQ</name>
      <full_name>\CPFT_OTHER_REQ</full_name>
      <value>2</value>
    </constant>
    <constant namespace="global" line="113" package="Squadron-Manager">
      <name>NOTIF_PATH</name>
      <full_name>\NOTIF_PATH</full_name>
      <value>'/etc/squadMan/notifications.csv'</value>
    </constant>
    <constant namespace="global" line="114" package="Squadron-Manager">
      <name>PSSWD_INI</name>
      <full_name>\PSSWD_INI</full_name>
      <value>'/etc/squadMan/psswd.ini'</value>
    </constant>
    <constant namespace="global" line="118" package="Squadron-Manager">
      <name>PROMOTION_WAIT</name>
      <full_name>\PROMOTION_WAIT</full_name>
      <value>4838400</value>
    </constant>
    <function namespace="global" line="127" package="Squadron-Manager">
      <name>auditLog</name>
      <full_name>\auditLog</full_name>
      <docblock line="119">
        <description>Stores and auditable event to the AUDIT_LOG table.</description>
        <long-description>&lt;p&gt;If we have the user's CAPID that will be stored along with the log&lt;/p&gt;</long-description>
        <tag line="119" name="param" description="the IP address of the client" type="String" variable="$ip">
          <type by_reference="false">String</type>
        </tag>
        <tag line="119" name="param" description="- the type of event from the table INTRUSION_TYPE" type="String" variable="$type">
          <type by_reference="false">String</type>
        </tag>
        <tag line="119" name="return" description="the date and time of the Event formatted for SQL" type="String">
          <type by_reference="false">String</type>
        </tag>
      </docblock>
      <argument line="127">
        <name>$ip</name>
        <default></default>
        <type/>
      </argument>
      <argument line="127">
        <name>$type</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="148" package="Squadron-Manager">
      <name>auditDump</name>
      <full_name>\auditDump</full_name>
      <docblock line="141">
        <description>Inserts pertinant information for auditable event into AUDIT_DUMP</description>
        <long-description></long-description>
        <tag line="141" name="param" description="the time of the event returned from auditLog" type="String" variable="$time">
          <type by_reference="false">String</type>
        </tag>
        <tag line="141" name="param" description="the name of the value being stored, i.e. CAPID, input" type="String" variable="$fieldName">
          <type by_reference="false">String</type>
        </tag>
        <tag line="141" name="param" description="the actual value of the field. i.e. 123456" type="String" variable="$fieldValue">
          <type by_reference="false">String</type>
        </tag>
      </docblock>
      <argument line="148">
        <name>$time</name>
        <default></default>
        <type/>
      </argument>
      <argument line="148">
        <name>$fieldName</name>
        <default></default>
        <type/>
      </argument>
      <argument line="148">
        <name>$fieldValue</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="162" package="Squadron-Manager">
      <name>logLogin</name>
      <full_name>\logLogin</full_name>
      <docblock line="157">
        <description>Logs login attempts, successful or not to LOGIN_LOG.</description>
        <long-description></long-description>
        <tag line="157" name="param" description="the USERs CAPID that the login was for" type="Int" variable="$capid">
          <type by_reference="false">Int</type>
        </tag>
        <tag line="157" name="param" description="True if they were able to login false if they're login failed" type="boolean" variable="$success">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <argument line="162">
        <name>$capid</name>
        <default></default>
        <type/>
      </argument>
      <argument line="162">
        <name>$success</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="182" package="Squadron-Manager">
      <name>checkAccountLocks</name>
      <full_name>\checkAccountLocks</full_name>
      <docblock line="171">
        <description>Checks if an account is locked from too many bad logins
Checks ACCOUNT_LOCKS and LOGIN_LOG</description>
        <long-description>&lt;p&gt;This will first if their is ACCOUNT_LOCK in place already from said table, and verifies the lock
is still in effect.  If there isn't one it checks the number of bad logins,and will place a block
Uses the constant MAX_LOGIN for the maximum number of logins in the time from LOCK_TIME&lt;/p&gt;</long-description>
        <tag line="171" name="param" description="the user's CAPID you are checking" type="Int" variable="$capid">
          <type by_reference="false">Int</type>
        </tag>
        <tag line="171" name="return" description="true if there is no lock false if there is a lock" type="boolean">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <argument line="182">
        <name>$capid</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="220" package="Squadron-Manager">
      <name>newMember</name>
      <full_name>\newMember</full_name>
      <docblock line="213">
        <description>Creates an input form for creating a new member</description>
        <long-description></long-description>
        <tag line="213" name="param" description="the Datebase connection" type="\mysqli" variable="$identifier">
          <type by_reference="false">\mysqli</type>
        </tag>
        <tag line="213" name="param" description="the target page for the form" type="String" variable="$page">
          <type by_reference="false">String</type>
        </tag>
        <tag line="213" name="param" description="the CAPID if specified to display as the defualt CAPID" type="Int" variable="$capid">
          <type by_reference="false">Int</type>
        </tag>
      </docblock>
      <argument line="220">
        <name>$identifier</name>
        <default></default>
        <type/>
      </argument>
      <argument line="220">
        <name>$page</name>
        <default></default>
        <type/>
      </argument>
      <argument line="220">
        <name>$capid</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="253" package="Squadron-Manager">
      <name>newContact</name>
      <full_name>\newContact</full_name>
      <docblock line="246">
        <description>Creates a form to input emergency contact information</description>
        <long-description></long-description>
        <tag line="246" name="param" description="whether or not to have it's own form" type="Boolean" variable="$submit">
          <type by_reference="false">Boolean</type>
        </tag>
        <tag line="246" name="param" description="the database connection" type="\mysqli" variable="$identifier">
          <type by_reference="false">\mysqli</type>
        </tag>
        <tag line="246" name="param" description="the target page if $submit is true" type="String" variable="$page">
          <type by_reference="false">String</type>
        </tag>
      </docblock>
      <argument line="253">
        <name>$submit</name>
        <default></default>
        <type/>
      </argument>
      <argument line="253">
        <name>$identifier</name>
        <default></default>
        <type/>
      </argument>
      <argument line="253">
        <name>$page</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="277" package="Squadron-Manager">
      <name>newUnit</name>
      <full_name>\newUnit</full_name>
      <docblock line="271">
        <description>Creates a form to create a new Unit</description>
        <long-description></long-description>
        <tag line="271" name="param" description="the database connection" type="\mysqli" variable="$identifier">
          <type by_reference="false">\mysqli</type>
        </tag>
        <tag line="271" name="param" description="the target page for the form" type="String" variable="$page">
          <type by_reference="false">String</type>
        </tag>
      </docblock>
      <argument line="277">
        <name>$identifier</name>
        <default></default>
        <type/>
      </argument>
      <argument line="277">
        <name>$page</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="292" package="Squadron-Manager">
      <name>newContactType</name>
      <full_name>\newContactType</full_name>
      <docblock line="287">
        <description>Form to create a new Emergency Contact relationship</description>
        <long-description></long-description>
        <tag line="287" name="param" description="the target page" type="String" variable="$page">
          <type by_reference="false">String</type>
        </tag>
      </docblock>
      <argument line="292">
        <name>$page</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="305" package="Squadron-Manager">
      <name>newVisitor</name>
      <full_name>\newVisitor</full_name>
      <docblock line="298">
        <description>Creates a form for inputing a new visitor to our unit</description>
        <long-description></long-description>
        <tag line="298" name="param" description="the target page" type="String" variable="$page">
          <type by_reference="false">String</type>
        </tag>
        <tag line="298" name="param" description="the first name from the input to display by defualt" type="String" variable="$defaultFname">
          <type by_reference="false">String</type>
        </tag>
        <tag line="298" name="param" description="the last name from input to display by default" type="String" variable="$defaultLname">
          <type by_reference="false">String</type>
        </tag>
      </docblock>
      <argument line="305">
        <name>$page</name>
        <default></default>
        <type/>
      </argument>
      <argument line="305">
        <name>$defaultFname</name>
        <default>null</default>
        <type/>
      </argument>
      <argument line="305">
        <name>$defaultLname</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="325" package="Squadron-Manager">
      <name>dropDownMenu</name>
      <full_name>\dropDownMenu</full_name>
      <docblock line="314">
        <description>Creates a drop down &lt;select&gt; menu from a database query</description>
        <long-description>&lt;p&gt;The first column needs to be the code for the variable to input to the server, column 2 is the text to display in the drop down&lt;/p&gt;</long-description>
        <tag line="314" name="param" description="the Query to run" type="String" variable="$query">
          <type by_reference="false">String</type>
        </tag>
        <tag line="314" name="param" description="the name of the input for the form" type="String" variable="$name">
          <type by_reference="false">String</type>
        </tag>
        <tag line="314" name="param" description="the database connection" type="\mysqli" variable="$identifier">
          <type by_reference="false">\mysqli</type>
        </tag>
        <tag line="314" name="param" description="true to allow users to select an other value" type="boolean" variable="$hasotherfield">
          <type by_reference="false">boolean</type>
        </tag>
        <tag line="314" name="param" description="the code of the option to show by default" type="String" variable="$default">
          <type by_reference="false">String</type>
        </tag>
        <tag line="314" name="param" description="allows the user to not put input" type="boolean" variable="$hasNoSelect">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <argument line="325">
        <name>$query</name>
        <default></default>
        <type/>
      </argument>
      <argument line="325">
        <name>$name</name>
        <default></default>
        <type/>
      </argument>
      <argument line="325">
        <name>$identifier</name>
        <default></default>
        <type/>
      </argument>
      <argument line="325">
        <name>$hasotherfield</name>
        <default>false</default>
        <type/>
      </argument>
      <argument line="325">
        <name>$default</name>
        <default>null</default>
        <type/>
      </argument>
      <argument line="325">
        <name>$hasNoSelect</name>
        <default>false</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="356" package="Squadron-Manager">
      <name>reportDbError</name>
      <full_name>\reportDbError</full_name>
      <docblock line="347">
        <description>Logs a database error, and displays an error message to the user</description>
        <long-description>&lt;p&gt;WARNING: for development displays the error code, and more information, this needs
to be removed for production servers&lt;/p&gt;</long-description>
        <tag line="347" name="param" description="the Mysql error" type="String" variable="$errorno">
          <type by_reference="false">String</type>
        </tag>
        <tag line="347" name="param" description="the error text from Mysql" type="String" variable="$error">
          <type by_reference="false">String</type>
        </tag>
      </docblock>
      <argument line="356">
        <name>$errorno</name>
        <default></default>
        <type/>
      </argument>
      <argument line="356">
        <name>$error</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="379" package="Squadron-Manager">
      <name>Query</name>
      <full_name>\Query</full_name>
      <docblock line="368">
        <description>Runs a SQL query, and handles the database errors</description>
        <long-description>&lt;p&gt;Use this function for all your queries, and not mysqli_query. This allows easy
portability to other DBMS's&lt;/p&gt;</long-description>
        <tag line="368" name="param" description="the query to run" type="String" variable="$query">
          <type by_reference="false">String</type>
        </tag>
        <tag line="368" name="param" description="the database connection" type="\mysqli" variable="$ident">
          <type by_reference="false">\mysqli</type>
        </tag>
        <tag line="368" name="param" description="a message to display on success" type="String" variable="$message">
          <type by_reference="false">String</type>
        </tag>
        <tag line="368" name="return" description="for Select returns the mysqli_result, for UPdate, etc returns true on success false for failures" type="\type">
          <type by_reference="false">\type</type>
        </tag>
      </docblock>
      <argument line="379">
        <name>$query</name>
        <default></default>
        <type/>
      </argument>
      <argument line="379">
        <name>$ident</name>
        <default></default>
        <type>\mysqli</type>
      </argument>
      <argument line="379">
        <name>$message</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="399" package="Squadron-Manager">
      <name>connect</name>
      <full_name>\connect</full_name>
      <docblock line="388">
        <description>Connects to a database.</description>
        <long-description>&lt;p&gt;Use this function allow easy portability to other DBMSs&lt;/p&gt;</long-description>
        <tag line="388" name="param" description="the username" type="String" variable="$username">
          <type by_reference="false">String</type>
        </tag>
        <tag line="388" name="param" description="the password" type="String" variable="$password">
          <type by_reference="false">String</type>
        </tag>
        <tag line="388" name="param" description="the server you are connecting to" type="String" variable="$server">
          <type by_reference="false">String</type>
        </tag>
        <tag line="388" name="param" description="the default database to use" type="String" variable="$db">
          <type by_reference="false">String</type>
        </tag>
        <tag line="388" name="return" description="the mysqli connection on success false on failure" type="mixed">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <argument line="399">
        <name>$username</name>
        <default></default>
        <type/>
      </argument>
      <argument line="399">
        <name>$password</name>
        <default>null</default>
        <type/>
      </argument>
      <argument line="399">
        <name>$server</name>
        <default>"localhost"</default>
        <type/>
      </argument>
      <argument line="399">
        <name>$db</name>
        <default>"SQUADRON_MANAGER"</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="420" package="Squadron-Manager">
      <name>Result</name>
      <full_name>\Result</full_name>
      <docblock line="412">
        <description>Returns a single result from a query</description>
        <long-description></long-description>
        <tag line="412" name="param" description="the result to be parsed" type="\mysqli_result" variable="$result">
          <type by_reference="false">\mysqli_result</type>
        </tag>
        <tag line="412" name="param" description="the row you are looking for" type="\type" variable="$row">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="412" name="param" description="the column you want" type="\type" variable="$field">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="412" name="return" description="returns the cell" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="420">
        <name>$result</name>
        <default></default>
        <type>\mysqli_result</type>
      </argument>
      <argument line="420">
        <name>$row</name>
        <default></default>
        <type/>
      </argument>
      <argument line="420">
        <name>$field</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="450" package="Squadron-Manager">
      <name>allResults</name>
      <full_name>\allResults</full_name>
      <docblock line="441">
        <description>Creates a 2-d array from a query result</description>
        <long-description>&lt;p&gt;The first level of the array is the row, and the second the column
$result[0]['hi'] would be the column hi for the first row.&lt;/p&gt;</long-description>
        <tag line="441" name="param" description="the query result being parsed" type="\mysqli_result" variable="$result">
          <type by_reference="false">\mysqli_result</type>
        </tag>
        <tag line="441" name="return" description="" type="Array">
          <type by_reference="false">Array</type>
        </tag>
      </docblock>
      <argument line="450">
        <name>$result</name>
        <default></default>
        <type>\mysqli_result</type>
      </argument>
    </function>
    <function namespace="global" line="463" package="Squadron-Manager">
      <name>numRows</name>
      <full_name>\numRows</full_name>
      <docblock line="457">
        <description>Returns the number of rows in a mysql_result</description>
        <long-description></long-description>
        <tag line="457" name="param" description="the result to count" type="\mysqli_result" variable="$result">
          <type by_reference="false">\mysqli_result</type>
        </tag>
        <tag line="457" name="return" description="the number of rows returned" type="int">
          <type by_reference="false">int</type>
        </tag>
      </docblock>
      <argument line="463">
        <name>$result</name>
        <default></default>
        <type>\mysqli_result</type>
      </argument>
    </function>
    <function namespace="global" line="474" package="Squadron-Manager">
      <name>rows_affected</name>
      <full_name>\rows_affected</full_name>
      <docblock line="469">
        <description>Reutrns the number of rows affected by the last query</description>
        <long-description></long-description>
        <tag line="469" name="param" description="the database connection from" type="\mysqli" variable="$ident">
          <type by_reference="false">\mysqli</type>
        </tag>
        <tag line="469" name="return" description="the number of rows affected" type="int">
          <type by_reference="false">int</type>
        </tag>
      </docblock>
      <argument line="474">
        <name>$ident</name>
        <default></default>
        <type>\mysqli</type>
      </argument>
    </function>
    <function namespace="global" line="483" package="Squadron-Manager">
      <name>close</name>
      <full_name>\close</full_name>
      <docblock line="477">
        <description>Closes a database connection</description>
        <long-description></long-description>
        <tag line="477" name="param" description="the database connection to close" type="\mysqli" variable="$ident">
          <type by_reference="false">\mysqli</type>
        </tag>
        <tag line="477" name="return" description="true on success false otherwise" type="boolean">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <argument line="483">
        <name>$ident</name>
        <default></default>
        <type>\mysqli</type>
      </argument>
    </function>
    <function namespace="global" line="493" package="Squadron-Manager">
      <name>prepare_statement</name>
      <full_name>\prepare_statement</full_name>
      <docblock line="486">
        <description>Prepares a prepared-statement from the query provided and the database connection</description>
        <long-description></long-description>
        <tag line="486" name="param" description="the database connection to use for the prepared statement" type="\mysqli" variable="$ident">
          <type by_reference="false">\mysqli</type>
        </tag>
        <tag line="486" name="param" description="the query for the prepared statement" type="\type" variable="$query">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="486" name="return" description="the prepared statement created" type="\mysqli_stmt">
          <type by_reference="false">\mysqli_stmt</type>
        </tag>
      </docblock>
      <argument line="493">
        <name>$ident</name>
        <default></default>
        <type>\mysqli</type>
      </argument>
      <argument line="493">
        <name>$query</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="509" package="Squadron-Manager">
      <name>bind</name>
      <full_name>\bind</full_name>
      <docblock line="499">
        <description>Binds the values to the prepared statement and prepares it for execution.</description>
        <long-description>&lt;p&gt;Mysqli_stmt::Bind_param uses referential variables for this, but this function doesn't support that
do not use in a refferential variable way&lt;/p&gt;</long-description>
        <tag line="499" name="param" description="the prepared statement being used" type="\mysqli_stmt" variable="$stmt">
          <type by_reference="false">\mysqli_stmt</type>
        </tag>
        <tag line="499" name="param" description="the string of types being used. see mysqli_stmt::bind_param &lt;http://php.net/manual/en/mysqli-stmt.bind-param.php&gt;" type="String" variable="$types">
          <type by_reference="false">String</type>
        </tag>
        <tag line="499" name="param" description="the array of values to actually bind" type="array" variable="$bind">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
      <argument line="509">
        <name>$stmt</name>
        <default></default>
        <type>\mysqli_stmt</type>
      </argument>
      <argument line="509">
        <name>$types</name>
        <default></default>
        <type/>
      </argument>
      <argument line="509">
        <name>$bind</name>
        <default></default>
        <type>array</type>
      </argument>
    </function>
    <function namespace="global" line="524" package="Squadron-Manager">
      <name>execute</name>
      <full_name>\execute</full_name>
      <docblock line="516">
        <description>Executes a prepared Statement</description>
        <long-description>&lt;p&gt;You need to bind the parameters before executing this.&lt;/p&gt;</long-description>
        <tag line="516" name="param" description="the prepared statement to execute." type="\mysqli_stmt" variable="$stmt">
          <type by_reference="false">\mysqli_stmt</type>
        </tag>
        <tag line="516" name="return" description="for Select a mysqli_result, else true for success and false on failure" type="mixed">
          <type by_reference="false">mixed</type>
        </tag>
      </docblock>
      <argument line="524">
        <name>$stmt</name>
        <default></default>
        <type>\mysqli_stmt</type>
      </argument>
    </function>
    <function namespace="global" line="540" package="Squadron-Manager">
      <name>close_stmt</name>
      <full_name>\close_stmt</full_name>
      <docblock line="534">
        <description>Closes a prepared Statement</description>
        <long-description></long-description>
        <tag line="534" name="param" description="the statement to close" type="\mysqli_stmt" variable="$stmt">
          <type by_reference="false">\mysqli_stmt</type>
        </tag>
        <tag line="534" name="return" description="true on success false on failure" type="bool">
          <type by_reference="false">bool</type>
        </tag>
      </docblock>
      <argument line="540">
        <name>$stmt</name>
        <default></default>
        <type>\mysqli_stmt</type>
      </argument>
    </function>
    <function namespace="global" line="558" package="Squadron-Manager">
      <name>cleanInputInt</name>
      <full_name>\cleanInputInt</full_name>
      <docblock line="543">
        <description>CleanInputInt-cleans input number</description>
        <long-description>&lt;p&gt;This cleans input numbers against SQL injection, XSS, and remote Execution and file traversing.
It uses the mysqli_real_escape_string htmlspecialchars, and escapshellcmd to do this.
It also checks length, and parses it as a number to prevent other issues. Any issues and the event will be
logged along with the sanatized form of the input&lt;/p&gt;

&lt;p&gt;This&lt;/p&gt;</long-description>
        <tag line="543" name="param" description="the raw Input" type="String" variable="$input">
          <type by_reference="false">String</type>
        </tag>
        <tag line="543" name="param" description="the absolue length or maximum lenght the number must be, depending on $exact" type="Int" variable="$length">
          <type by_reference="false">Int</type>
        </tag>
        <tag line="543" name="param" description="the name of the input field used for logging" type="String" variable="$fieldName">
          <type by_reference="false">String</type>
        </tag>
        <tag line="543" name="param" description="true for $length to be exact false for $length to be the max length" type="bool" variable="$exact">
          <type by_reference="false">bool</type>
        </tag>
        <tag line="543" name="return" description="The Input Number parsed and cleaned as a floating point" type="float">
          <type by_reference="false">float</type>
        </tag>
      </docblock>
      <argument line="558">
        <name>$input</name>
        <default></default>
        <type/>
      </argument>
      <argument line="558">
        <name>$length</name>
        <default></default>
        <type/>
      </argument>
      <argument line="558">
        <name>$fieldName</name>
        <default></default>
        <type/>
      </argument>
      <argument line="558">
        <name>$exact</name>
        <default>true</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="584" package="Squadron-Manager">
      <name>cleanInputString</name>
      <full_name>\cleanInputString</full_name>
      <docblock line="572">
        <description>Cleans an input String</description>
        <long-description>&lt;p&gt;See cleanInputInt for how it cleans the text&lt;/p&gt;</long-description>
        <tag line="572" name="param" description="The raw input" type="String" variable="$input">
          <type by_reference="false">String</type>
        </tag>
        <tag line="572" name="param" description="the maximum allowed length" type="Int" variable="$length">
          <type by_reference="false">Int</type>
        </tag>
        <tag line="572" name="param" description="the field name to be logged" type="String" variable="$fieldName">
          <type by_reference="false">String</type>
        </tag>
        <tag line="572" name="param" description="false if the String can't be empty, true if it can be empty" type="bool" variable="$empty">
          <type by_reference="false">bool</type>
        </tag>
        <tag line="572" name="param" description="true if needs to clean against shell characters" type="bool" variable="$shellClean">
          <type by_reference="false">bool</type>
        </tag>
        <tag line="572" name="return" description="returns the cleaned text" type="String">
          <type by_reference="false">String</type>
        </tag>
      </docblock>
      <argument line="584">
        <name>$input</name>
        <default></default>
        <type/>
      </argument>
      <argument line="584">
        <name>$length</name>
        <default></default>
        <type/>
      </argument>
      <argument line="584">
        <name>$fieldName</name>
        <default></default>
        <type/>
      </argument>
      <argument line="584">
        <name>$empty</name>
        <default></default>
        <type/>
      </argument>
      <argument line="584">
        <name>$shellClean</name>
        <default>true</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="615" package="Squadron-Manager">
      <name>cleanInputDate</name>
      <full_name>\cleanInputDate</full_name>
      <docblock line="603">
        <description>Cleans an input text and matches its pattern against a regular expression</description>
        <long-description>&lt;p&gt;See CleanInputInt for how the text is cleaned, except this does not use
cleanShellargs()&lt;/p&gt;</long-description>
        <tag line="603" name="param" description="the Raw input" type="String" variable="$input">
          <type by_reference="false">String</type>
        </tag>
        <tag line="603" name="param" description="the regular expression to check the pattern against" type="String" variable="$regex">
          <type by_reference="false">String</type>
        </tag>
        <tag line="603" name="param" description="the maximum length of the field" type="int" variable="$length">
          <type by_reference="false">int</type>
        </tag>
        <tag line="603" name="param" description="the field name for logging purposed" type="String" variable="$fieldName">
          <type by_reference="false">String</type>
        </tag>
        <tag line="603" name="return" description="the cleaned input or null if it doesn't match the regex or is too long" type="String">
          <type by_reference="false">String</type>
        </tag>
      </docblock>
      <argument line="615">
        <name>$input</name>
        <default></default>
        <type/>
      </argument>
      <argument line="615">
        <name>$regex</name>
        <default></default>
        <type/>
      </argument>
      <argument line="615">
        <name>$length</name>
        <default></default>
        <type/>
      </argument>
      <argument line="615">
        <name>$fieldName</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="642" package="Squadron-Manager">
      <name>cleanUploadFile</name>
      <full_name>\cleanUploadFile</full_name>
      <docblock line="628">
        <description>A function to verify uploaded files.</description>
        <long-description>&lt;p&gt;This verifies the proper data type, and that file was uploaded.
  Checks for malicious code. Saves the file in the specified
directory with a new name, a md5hash and the timestamp. It also will handle
any upload errors&lt;/p&gt;</long-description>
        <tag line="628" name="param" description="the index for the file in the $_FILES array" type="String" variable="$index">
          <type by_reference="false">String</type>
        </tag>
        <tag line="628" name="param" description="the maximum size of the file in bytes" type="int" variable="$maxSize">
          <type by_reference="false">int</type>
        </tag>
        <tag line="628" name="param" description="the directory to save the file in" type="String" variable="$saveDir">
          <type by_reference="false">String</type>
        </tag>
        <tag line="628" name="param" description="the mime type of the accepted file type" type="String" variable="$MIME_TYPE">
          <type by_reference="false">String</type>
        </tag>
        <tag line="628" name="return" description="the URL to the saved file or false if there was an error or attack" type="String">
          <type by_reference="false">String</type>
        </tag>
      </docblock>
      <argument line="642">
        <name>$index</name>
        <default></default>
        <type/>
      </argument>
      <argument line="642">
        <name>$maxSize</name>
        <default></default>
        <type/>
      </argument>
      <argument line="642">
        <name>$saveDir</name>
        <default></default>
        <type/>
      </argument>
      <argument line="642">
        <name>$MIME_TYPE</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="715" package="Squadron-Manager">
      <name>session_secure_start</name>
      <full_name>\session_secure_start</full_name>
      <docblock line="693">
        <description>Starts a session, and checks for foul play</description>
        <long-description>&lt;p&gt;This checks first for session hijacking by checking the request is from the
right IP address, it will also update the session key. It will then check if
the user is allowed to view this page using a list from session_predict_path.
If there is a threat it will force the user to resign in.&lt;/p&gt;

&lt;p&gt;Uses the following Session variables
ip_addr= the ip_address to be used
predicted- the pages the user can see
last- the last visited page
-request - an array of the last used request header
      -agent- the user agent
      -accept- the accept header
      -lang_char- the accepted language and charset
      -encoding- the accepted encoding
- resignin- force user to resign in 0 - must resignin 1- another request&lt;/p&gt;</long-description>
        <tag line="693" name="param" description="the capid of the user for creating the session should be used only&#10;by /login/index.php" type="Int" variable="$capid">
          <type by_reference="false">Int</type>
        </tag>
      </docblock>
      <argument line="715">
        <name>$capid</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="807" package="Squadron-Manager">
      <name>session_predict_path</name>
      <full_name>\session_predict_path</full_name>
      <docblock line="796">
        <description>Creates an array of pages the user is allowed to see.</description>
        <long-description>&lt;p&gt;The pages the user has permissions are added. Then pages that are allowed to be seen
after the page the user is on. i.e. the page to confirm a member deletion from
the member delete page.&lt;/p&gt;</long-description>
        <tag line="796" name="param" description="The databse connection of user ViewNext" type="\type" variable="$ident">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="796" name="param" description="The user we're looking at only for establishing sessions" type="\type" variable="$capid">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="796" name="param" description="The page to create the list for if not the current page" type="\type" variable="$page">
          <type by_reference="false">\type</type>
        </tag>
      </docblock>
      <argument line="807">
        <name>$ident</name>
        <default></default>
        <type/>
      </argument>
      <argument line="807">
        <name>$capid</name>
        <default>null</default>
        <type/>
      </argument>
      <argument line="807">
        <name>$page</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="864" package="Squadron-Manager">
      <name>session_resign_in</name>
      <full_name>\session_resign_in</full_name>
      <docblock line="859">
        <description>Forces a user to resign in if there is a threat against their session.</description>
        <long-description></long-description>
        <tag line="859" name="param" description="allowSignIn false won't resign in just show dead session true allows to resign in" type="boolean" variable="$allowSignIn">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <argument line="864">
        <name>$allowSignIn</name>
        <default>true</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="877" package="Squadron-Manager">
      <name>log_off</name>
      <full_name>\log_off</full_name>
      <docblock line="874">
        <description>Destroys the user session.</description>
        <long-description>&lt;p&gt;And logs the log off.&lt;/p&gt;</long-description>
      </docblock>
    </function>
    <function namespace="global" line="909" package="Squadron-Manager">
      <name>enterDate</name>
      <full_name>\enterDate</full_name>
      <docblock line="902">
        <description>Creates a input for entering a date</description>
        <long-description></long-description>
        <tag line="902" name="param" description="true to have all the inputs inline, false stacks them" type="bool" variable="$sameLine">
          <type by_reference="false">bool</type>
        </tag>
        <tag line="902" name="param" description="any string to add to the end of the input name to distinguish multiple date inputs" type="String" variable="$append">
          <type by_reference="false">String</type>
        </tag>
        <tag line="902" name="param" description="the Default date to show if neccessary" type="\DateTime" variable="$default">
          <type by_reference="false">\DateTime</type>
        </tag>
      </docblock>
      <argument line="909">
        <name>$sameLine</name>
        <default>true</default>
        <type/>
      </argument>
      <argument line="909">
        <name>$append</name>
        <default>null</default>
        <type/>
      </argument>
      <argument line="909">
        <name>$default</name>
        <default>null</default>
        <type>\DateTime</type>
      </argument>
    </function>
    <function namespace="global" line="955" package="Squadron-Manager">
      <name>parse_date_input</name>
      <full_name>\parse_date_input</full_name>
      <docblock line="948">
        <description>Parses and cleans the input from an enterDate() form</description>
        <long-description></long-description>
        <tag line="948" name="param" description="the array input usually $_POST" type="array" variable="$input">
          <type by_reference="false">array</type>
        </tag>
        <tag line="948" name="param" description="the string that was appended in enterDate()" type="\Strin" variable="$append">
          <type by_reference="false">\Strin</type>
        </tag>
        <tag line="948" name="return" description="null if there was no input the DateTime object if a date was given" type="null|\DateTime">
          <type by_reference="false">null</type>
          <type by_reference="false">\DateTime</type>
        </tag>
      </docblock>
      <argument line="955">
        <name>$input</name>
        <default></default>
        <type>array</type>
      </argument>
      <argument line="955">
        <name>$append</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="976" package="Squadron-Manager">
      <name>monthArray</name>
      <full_name>\monthArray</full_name>
      <docblock line="972">
        <description>Returns an array of the months for enterDate</description>
        <long-description></long-description>
        <tag line="972" name="return" description="of the months" type="array">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
    </function>
    <function namespace="global" line="995" package="Squadron-Manager">
      <name>display_event_search_in</name>
      <full_name>\display_event_search_in</full_name>
      <docblock line="990">
        <description>Displays the input form to search for a specific event.</description>
        <long-description></long-description>
        <tag line="990" name="param" description="The database connection" type="\type" variable="$ident">
          <type by_reference="false">\type</type>
        </tag>
      </docblock>
      <argument line="995">
        <name>$ident</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="1021" package="Squadron-Manager">
      <name>searchEvent</name>
      <full_name>\searchEvent</full_name>
      <docblock line="1010">
        <description>Searchs for an event from the display_event_search_in()</description>
        <long-description>&lt;p&gt;If there is a single result it will call the specified function. Otherwise it
will display the results as links to link.  The links will have the event codes as a get field
?eCode=9Mar13M&lt;/p&gt;</long-description>
        <tag line="1010" name="param" description="The database Connection" type="\type" variable="$ident">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="1010" name="param" description="the function to call on a single result" type="\type" variable="$callable">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="1010" name="param" description="the link to go to if there are mutliple results" type="\type" variable="$link">
          <type by_reference="false">\type</type>
        </tag>
      </docblock>
      <argument line="1021">
        <name>$ident</name>
        <default></default>
        <type/>
      </argument>
      <argument line="1021">
        <name>$callable</name>
        <default></default>
        <type/>
      </argument>
      <argument line="1021">
        <name>$link</name>
        <default>"/login/attendance/event.php"</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="1086" package="Squadron-Manager">
      <name>getEventPromo</name>
      <full_name>\getEventPromo</full_name>
      <docblock line="1070">
        <description>Gets a list of passed promotion requirements that are attendance based.</description>
        <long-description>&lt;p&gt;This includes:
Squadron Activities
Safety classes
Character Development
Encampment&lt;/p&gt;</long-description>
        <tag line="1070" name="param" description="The database connection" type="\type" variable="$ident">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="1070" name="param" description="the user you're researching" type="\type" variable="$capid">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="1070" name="return" description="an array of the dates passed&#10;The first level is the promotion it is for  the second level is the event type&#10;AC= squadron activity&#10;the subevent code from SUbevent_Types for the others" type="\DateTime[]">
          <type by_reference="false">\DateTime[]</type>
        </tag>
      </docblock>
      <argument line="1086">
        <name>$ident</name>
        <default></default>
        <type/>
      </argument>
      <argument line="1086">
        <name>$capid</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="1171" package="Squadron-Manager">
      <name>checkEventPromo</name>
      <full_name>\checkEventPromo</full_name>
      <docblock line="1161">
        <description>Checks if an event-based promotion requirements was passed</description>
        <long-description>&lt;p&gt;It checks if they did attend that event&lt;/p&gt;</long-description>
        <tag line="1161" name="param" description="The array of the requirements from this-&gt;promotionRequirements" type="array" variable="$results">
          <type by_reference="false">array</type>
        </tag>
        <tag line="1161" name="param" description="the achievement searching for" type="String" variable="$achiev">
          <type by_reference="false">String</type>
        </tag>
        <tag line="1161" name="param" description="the code of the requirement typ" type="String" variable="$code">
          <type by_reference="false">String</type>
        </tag>
        <tag line="1161" name="return" description="if the requirement was passed then return the date, false if failed" type="\dateTime|boolean">
          <type by_reference="false">\dateTime</type>
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <argument line="1171">
        <name>$results</name>
        <default></default>
        <type>array</type>
      </argument>
      <argument line="1171">
        <name>$achiev</name>
        <default></default>
        <type/>
      </argument>
      <argument line="1171">
        <name>$code</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="1183" package="Squadron-Manager">
      <name>specialPromoRequire</name>
      <full_name>\specialPromoRequire</full_name>
      <docblock line="1177">
        <description>Returns an array of all the promotion requirements that are event based</description>
        <long-description></long-description>
        <tag line="1177" name="param" description="the database connection" type="\Mysqli" variable="$ident">
          <type by_reference="false">\Mysqli</type>
        </tag>
        <tag line="1177" name="return" description="the type codes of all the promotion requirements that are attendance based." type="Array">
          <type by_reference="false">Array</type>
        </tag>
      </docblock>
      <argument line="1183">
        <name>$ident</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="1200" package="Squadron-Manager">
      <name>promotionAprove</name>
      <full_name>\promotionAprove</full_name>
      <docblock line="1193">
        <description>Displays the table for aproving the promotion requests.</description>
        <long-description></long-description>
        <tag line="1193" name="param" description="the database connection" type="\mysqli" variable="$ident">
          <type by_reference="false">\mysqli</type>
        </tag>
        <tag line="1193" name="param" description="the member type that the promotion requests are to be displayed for" type="String" variable="$memberType">
          <type by_reference="false">String</type>
        </tag>
        <tag line="1193" name="param" description="whether or not the member can approve the promotion" type="boolean" variable="$approve">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <argument line="1200">
        <name>$ident</name>
        <default></default>
        <type/>
      </argument>
      <argument line="1200">
        <name>$memberType</name>
        <default></default>
        <type/>
      </argument>
      <argument line="1200">
        <name>$approve</name>
        <default>false</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="1258" package="Squadron-Manager">
      <name>compareSignUp</name>
      <full_name>\compareSignUp</full_name>
      <docblock line="1249">
        <description>A custom usort function for sorting promotion requests</description>
        <long-description>&lt;p&gt;Sorts the requests based upon which member has the least amount of requirements completed
it is based 1&lt;em&gt;the number of incomplete requirements+.5&lt;/em&gt; the number of in-progress tasks&lt;/p&gt;</long-description>
        <tag line="1249" name="param" description="the first item" type="array" variable="$a">
          <type by_reference="false">array</type>
        </tag>
        <tag line="1249" name="param" description="the second item" type="array" variable="$b">
          <type by_reference="false">array</type>
        </tag>
        <tag line="1249" name="return" description="0 if they are equal 1 if a is less -1 if a is greater" type="int">
          <type by_reference="false">int</type>
        </tag>
      </docblock>
      <argument line="1258">
        <name>$a</name>
        <default></default>
        <type/>
      </argument>
      <argument line="1258">
        <name>$b</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="1279" package="Squadron-Manager">
      <name>promoRequireInput</name>
      <full_name>\promoRequireInput</full_name>
      <docblock line="1265">
        <description>Creates an input field to input promotion score, and date</description>
        <long-description>&lt;p&gt;Displays input tags to get the input for entering a promotion requirement
passage.  This only creates the input, and does not parse or handle the input&lt;/p&gt;</long-description>
        <tag line="1265" name="param" description="The capid of who it is" type="Integer" variable="$capid">
          <type by_reference="false">Integer</type>
        </tag>
        <tag line="1265" name="param" description="the requirement type this is for" type="String" variable="$type">
          <type by_reference="false">String</type>
        </tag>
        <tag line="1265" name="param" description="The date passed if any" type="\DateTime" variable="$date">
          <type by_reference="false">\DateTime</type>
        </tag>
        <tag line="1265" name="param" description="the percentage stored if already passed" type="float" variable="$percentage">
          <type by_reference="false">float</type>
        </tag>
        <tag line="1265" name="param" description="The achievement this is for" type="string" variable="$achiev">
          <type by_reference="false">string</type>
        </tag>
        <tag line="1265" name="param" description="The event code for attendance requirements" type="string" variable="$code">
          <type by_reference="false">string</type>
        </tag>
        <tag line="1265" name="return" description="whether or not more needs to be displayed." type="\returns">
          <type by_reference="false">\returns</type>
        </tag>
      </docblock>
      <argument line="1279">
        <name>$capid</name>
        <default></default>
        <type/>
      </argument>
      <argument line="1279">
        <name>$type</name>
        <default></default>
        <type/>
      </argument>
      <argument line="1279">
        <name>$date</name>
        <default>null</default>
        <type>\DateTime</type>
      </argument>
      <argument line="1279">
        <name>$percentage</name>
        <default>null</default>
        <type/>
      </argument>
      <argument line="1279">
        <name>$achiev</name>
        <default>null</default>
        <type/>
      </argument>
      <argument line="1279">
        <name>$tester</name>
        <default>null</default>
        <type/>
      </argument>
      <argument line="1279">
        <name>$code</name>
        <default>null</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="1318" package="Squadron-Manager">
      <name>parsePromoInput</name>
      <full_name>\parsePromoInput</full_name>
      <docblock line="1310">
        <description>Parse the input from the promotion sign-up and insert it</description>
        <long-description>&lt;p&gt;Inserts the promotion information into                                                                           qqqqq the SQL database.&lt;/p&gt;</long-description>
        <tag line="1310" name="param" description="The resource for a SQL connection" type="\mysqli" variable="$ident">
          <type by_reference="false">\mysqli</type>
        </tag>
        <tag line="1310" name="param" description="the input array to be inserted" type="array" variable="$input">
          <type by_reference="false">array</type>
        </tag>
        <tag line="1310" name="return" description="" type="Void">
          <type by_reference="false">Void</type>
        </tag>
      </docblock>
      <argument line="1318">
        <name>$ident</name>
        <default></default>
        <type>\mysqli</type>
      </argument>
      <argument line="1318">
        <name>$input</name>
        <default></default>
        <type>array</type>
      </argument>
    </function>
    <function namespace="global" line="1371" package="Squadron-Manager">
      <name>parsePercent</name>
      <full_name>\parsePercent</full_name>
      <docblock line="1363">
        <description>Parses percentage input and cleans it.</description>
        <long-description></long-description>
        <tag line="1363" name="param" description="the appended stuff to post array" type="\type" variable="$append">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="1363" name="param" description="the post array" type="array" variable="$inputs">
          <type by_reference="false">array</type>
        </tag>
        <tag line="1363" name="param" description="the passing percentage as a decimal" type="\type" variable="$passing">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="1363" name="return" description="returns null if no input, false if incorrent or not passing, and the percentage as a float" type="null|boolean|float">
          <type by_reference="false">null</type>
          <type by_reference="false">boolean</type>
          <type by_reference="false">float</type>
        </tag>
      </docblock>
      <argument line="1371">
        <name>$append</name>
        <default></default>
        <type/>
      </argument>
      <argument line="1371">
        <name>$inputs</name>
        <default></default>
        <type>array</type>
      </argument>
      <argument line="1371">
        <name>$passing</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="1411" package="Squadron-Manager">
      <name>verifyCPFT</name>
      <full_name>\verifyCPFT</full_name>
      <docblock line="1403">
        <description>Checks if the tester passed the CPFT</description>
        <long-description></long-description>
        <tag line="1403" name="param" description="an array from retrieveCPFTrequire" type="array" variable="$requirements">
          <type by_reference="false">array</type>
        </tag>
        <tag line="1403" name="param" description="an array of the actual scores" type="array" variable="$actual">
          <type by_reference="false">array</type>
        </tag>
        <tag line="1403" name="param" description="the database connection" type="\ident" variable="$actual">
          <type by_reference="false">\ident</type>
        </tag>
        <tag line="1403" name="return" description="iff they passed, false if otherwise" type="true">
          <type by_reference="false">true</type>
        </tag>
      </docblock>
      <argument line="1411">
        <name>$ident</name>
        <default></default>
        <type/>
      </argument>
      <argument line="1411">
        <name>$requirements</name>
        <default></default>
        <type>array</type>
      </argument>
      <argument line="1411">
        <name>$actual</name>
        <default></default>
        <type>array</type>
      </argument>
    </function>
    <function namespace="global" line="1450" package="Squadron-Manager">
      <name>minutesFromDecimal</name>
      <full_name>\minutesFromDecimal</full_name>
      <docblock line="1444">
        <description>Converts decimal form of minutes to mm:ss</description>
        <long-description></long-description>
        <tag line="1444" name="param" description="the decimal form of the minutes" type="Float" variable="$input">
          <type by_reference="false">Float</type>
        </tag>
        <tag line="1444" name="return" description="the minutes in mm:ss" type="String">
          <type by_reference="false">String</type>
        </tag>
      </docblock>
      <argument line="1450">
        <name>$input</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="1461" package="Squadron-Manager">
      <name>parseMinutes</name>
      <full_name>\parseMinutes</full_name>
      <docblock line="1455">
        <description>Parses mm:ss as a decimal of minutes</description>
        <long-description></long-description>
        <tag line="1455" name="param" description="" type="\type" variable="$input">
          <type by_reference="false">\type</type>
        </tag>
        <tag line="1455" name="return" description="the $input as a decimal for of the time" type="float">
          <type by_reference="false">float</type>
        </tag>
      </docblock>
      <argument line="1461">
        <name>$input</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="1479" package="Squadron-Manager">
      <name>verify_password</name>
      <full_name>\verify_password</full_name>
      <docblock line="1467">
        <description>Verifies a password meets password requirements</description>
        <long-description>&lt;p&gt;Verifies the given passwords match. Sanatizes the password.
Then verifies it meets CAPR110-1 guidance.&lt;/p&gt;</long-description>
        <tag line="1467" name="param" description="" type="String" variable="$pass">
          <type by_reference="false">String</type>
        </tag>
        <tag line="1467" name="param" description="" type="String" variable="$retype">
          <type by_reference="false">String</type>
        </tag>
        <tag line="1467" name="param" description="- the old password to check the passwords did change" type="String" variable="$old">
          <type by_reference="false">String</type>
        </tag>
        <tag line="1467" name="param" description="true to check the old password, false if this the first password" type="Boolean" variable="$checkOld">
          <type by_reference="false">Boolean</type>
        </tag>
        <tag line="1467" name="return" description="0=&gt;boolean, true passed, false otherwise, 1=&gt;the password on success,1+=&gt; the error message(s) otherwise each message it's own index" type="array">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
      <argument line="1479">
        <name>$pass</name>
        <default></default>
        <type/>
      </argument>
      <argument line="1479">
        <name>$retype</name>
        <default></default>
        <type/>
      </argument>
      <argument line="1479">
        <name>$old</name>
        <default></default>
        <type/>
      </argument>
      <argument line="1479">
        <name>$checkOld</name>
        <default>true</default>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="global" line="1522" package="Default">
      <extends/>
      <name>member</name>
      <full_name>\member</full_name>
      <docblock line="1509">
        <description>A class for CAP members</description>
        <long-description>&lt;p&gt;It holds all the functions, and data for members. The amount of Data held is based on the init levels&lt;/p&gt;

&lt;p&gt;init levels :
-1= all from input
0=capid
1=capid+name+gender+achievement
2=1+text+member_type+picture
3=2+dates
4=3+emergency+unit&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="1523" namespace="global" package="Default">
        <name>$capid</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="1524" namespace="global" package="Default">
        <name>$name_last</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="1525" namespace="global" package="Default">
        <name>$name_first</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="1526" namespace="global" package="Default">
        <name>$gender</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="1527" namespace="global" package="Default">
        <name>$DoB</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="1528" namespace="global" package="Default">
        <name>$memberType</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="1529" namespace="global" package="Default">
        <name>$achievement</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="1530" namespace="global" package="Default">
        <name>$text_set</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="1531" namespace="global" package="Default">
        <name>$unit</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="1532" namespace="global" package="Default">
        <name>$Date_of_Join</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="1533" namespace="global" package="Default">
        <name>$emergencyContacts</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="1534" namespace="global" package="Default">
        <name>$date_terminated</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="1535" namespace="global" package="Default">
        <name>$badInput</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="1536" namespace="global" package="Default">
        <name>$isEmpty</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="private" line="1537" namespace="global" package="Default">
        <name>$initLevel</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="1538" namespace="global" package="Default">
        <name>$promoRecord</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1555" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="1539">
          <description>Creaes the member object</description>
          <long-description></long-description>
          <tag line="1539" name="param" description="string $capid the capid of the member" type="Integer|\numeric" variable="$capid">
            <type by_reference="false">Integer</type>
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="1539" name="param" description="the init level to start at, -1 if you want to enter the data and not get it from the database" type="Integer" variable="$level">
            <type by_reference="false">Integer</type>
          </tag>
          <tag line="1539" name="param" description="the database connection" type="\mysqli" variable="$ident">
            <type by_reference="false">\mysqli</type>
          </tag>
          <tag line="1539" name="param" description="the Last name" type="String" variable="$name_last">
            <type by_reference="false">String</type>
          </tag>
          <tag line="1539" name="param" description="The first name" type="String" variable="$name_first">
            <type by_reference="false">String</type>
          </tag>
          <tag line="1539" name="param" description="the gender of the member" type="string" variable="$gender">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1539" name="param" description="the member's date of birth" type="\dateTime" variable="$DoB">
            <type by_reference="false">\dateTime</type>
          </tag>
          <tag line="1539" name="param" description="the member's member type" type="String" variable="$memberType">
            <type by_reference="false">String</type>
          </tag>
          <tag line="1539" name="param" description="the member's current achievement" type="String" variable="$achievement">
            <type by_reference="false">String</type>
          </tag>
          <tag line="1539" name="param" description="the member's textbook set" type="String" variable="$text_set">
            <type by_reference="false">String</type>
          </tag>
          <tag line="1539" name="param" description="the member's home unit" type="String" variable="$unit">
            <type by_reference="false">String</type>
          </tag>
          <tag line="1539" name="param" description="the date the member joined" type="\DateTime" variable="$Date_of_Join">
            <type by_reference="false">\DateTime</type>
          </tag>
        </docblock>
        <argument line="1555">
          <name>$capid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1555">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1555">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1555">
          <name>$name_last</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="1555">
          <name>$name_first</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="1555">
          <name>$gender</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="1555">
          <name>$DoB</name>
          <default>null</default>
          <type>\dateTime</type>
        </argument>
        <argument line="1555">
          <name>$memberType</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="1555">
          <name>$achievement</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="1555">
          <name>$text_set</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="1555">
          <name>$unit</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="1555">
          <name>$Date_of_Join</name>
          <default>null</default>
          <type>\DateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1574" package="Default">
        <name>addEmergencyContact</name>
        <full_name>addEmergencyContact</full_name>
        <argument line="1574">
          <name>$Name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1574">
          <name>$relation</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1574">
          <name>$number</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1577" package="Default">
        <name>addEmeregencyContactArray</name>
        <full_name>addEmeregencyContactArray</full_name>
        <argument line="1577">
          <name>$input</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1589" package="Default">
        <name>insertMember</name>
        <full_name>insertMember</full_name>
        <argument line="1589">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1600" package="Default">
        <name>insertEmergency</name>
        <full_name>insertEmergency</full_name>
        <argument line="1600">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1614" package="Default">
        <name>sign_in</name>
        <full_name>sign_in</full_name>
        <argument line="1614">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1614">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1614">
          <name>$event_code</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1623" package="Default">
        <name>emergency_get</name>
        <full_name>emergency_get</full_name>
        <argument line="1623">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1630" package="Default">
        <name>unit_set</name>
        <full_name>unit_set</full_name>
        <argument line="1630">
          <name>$unit</name>
          <default></default>
          <type>\unit</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1633" package="Default">
        <name>replaceOther</name>
        <full_name>replaceOther</full_name>
        <argument line="1633">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1633">
          <name>$relatCode</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1640" package="Default">
        <name>exists</name>
        <full_name>exists</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1643" package="Default">
        <name>getCapid</name>
        <full_name>getCapid</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1646" package="Default">
        <name>getName_first</name>
        <full_name>getName_first</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1649" package="Default">
        <name>getName_Last</name>
        <full_name>getName_Last</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1652" package="Default">
        <name>getGrade</name>
        <full_name>getGrade</full_name>
        <argument line="1652">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1652">
          <name>$abreviated</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1666" package="Default">
        <name>testSign_up</name>
        <full_name>testSign_up</full_name>
        <argument line="1666">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1666">
          <name>$target</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1712" package="Default">
        <name>signUp</name>
        <full_name>signUp</full_name>
        <argument line="1712">
          <name>$input</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="1712">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1712">
          <name>$message</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1727" package="Default">
        <name>promotionReport</name>
        <full_name>promotionReport</full_name>
        <argument line="1727">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1727">
          <name>$header</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="1727">
          <name>$date</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="1727">
          <name>$edit</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1794" package="Default">
        <name>editInformation</name>
        <full_name>editInformation</full_name>
        <argument line="1794">
          <name>$page</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1794">
          <name>$identifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1807" package="Default">
        <name>editContact</name>
        <full_name>editContact</full_name>
        <argument line="1807">
          <name>$submit</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1807">
          <name>$identifier</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1807">
          <name>$page</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1832" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <argument line="1832">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1832">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1890" package="Default">
        <name>editFields</name>
        <full_name>editFields</full_name>
        <argument line="1890">
          <name>$input</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="1890">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1921" package="Default">
        <name>updateContact</name>
        <full_name>updateContact</full_name>
        <argument line="1921">
          <name>$row</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1921">
          <name>$oldRelat</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1921">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1930" package="Default">
        <name>insertSingleContact</name>
        <full_name>insertSingleContact</full_name>
        <argument line="1930">
          <name>$row</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1930">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1938" package="Default">
        <name>updateFields</name>
        <full_name>updateFields</full_name>
        <argument line="1938">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1950" package="Default">
        <name>approveFields</name>
        <full_name>approveFields</full_name>
        <argument line="1950">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1978" package="Default">
        <name>massUpdateFields</name>
        <full_name>massUpdateFields</full_name>
        <argument line="1978">
          <name>$input</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2001" package="Default">
        <name>saveUpdates</name>
        <full_name>saveUpdates</full_name>
        <argument line="2001">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2016" package="Default">
        <name>getPicture</name>
        <full_name>getPicture</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2019" package="Default">
        <name>get_full_memberType</name>
        <full_name>get_full_memberType</full_name>
        <argument line="2019">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2027" package="Default">
        <name>get_leader_text</name>
        <full_name>get_leader_text</full_name>
        <argument line="2027">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2035" package="Default">
        <name>get_gender</name>
        <full_name>get_gender</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2043" package="Default">
        <name>general_info</name>
        <full_name>general_info</full_name>
        <argument line="2043">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2054" package="Default">
        <name>display_Contact</name>
        <full_name>display_Contact</full_name>
        <argument line="2054">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2054">
          <name>$head_name</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2077" package="Default">
        <name>attendance_report</name>
        <full_name>attendance_report</full_name>
        <argument line="2077">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2077">
          <name>$header</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="2077">
          <name>$event</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2110" package="Default">
        <name>promo_board_report</name>
        <full_name>promo_board_report</full_name>
        <argument line="2110">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2110">
          <name>$header</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2145" package="Default">
        <name>discipline_report</name>
        <full_name>discipline_report</full_name>
        <argument line="2145">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2145">
          <name>$header</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2180" package="Default">
        <name>title</name>
        <full_name>title</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2186" package="Default">
        <name>staff_position</name>
        <full_name>staff_position</full_name>
        <argument line="2186">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2186">
          <name>$header</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2221" package="Default">
        <name>link_report</name>
        <full_name>link_report</full_name>
        <argument line="2221">
          <name>$new_tab</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2228" package="Default">
        <name>get_text</name>
        <full_name>get_text</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2231" package="Default">
        <name>getPromotionInfo</name>
        <full_name>getPromotionInfo</full_name>
        <argument line="2231">
          <name>$promoFor</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2231">
          <name>$ident</name>
          <default></default>
          <type>\mysqli</type>
        </argument>
        <argument line="2231">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2319" package="Default">
        <name>displayPromoRequest</name>
        <full_name>displayPromoRequest</full_name>
        <docblock line="2311">
          <description></description>
          <long-description></long-description>
          <tag line="2311" name="param" description="the array of the requirement_types from the header section" type="array" variable="$header">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2311" name="param" description="weather or not to display the dates for promotions" type="boolean" variable="$disPlayDates">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="2311" name="param" description="weather or not they can change the information or if read-only" type="boolean" variable="$canEdit">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="2311" name="param" description="weather or not the promotion is approved" type="boolean" variable="$approved">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="2311" name="param" description="whether or not to show as a whole promotion report, false will show name in the row, true won't" type="boolean" variable="$showPromo">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="2319">
          <name>$header</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="2319">
          <name>$disPlayDates</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="2319">
          <name>$canEdit</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="2319">
          <name>$approved</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="2319">
          <name>$showPromo</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2399" package="Default">
        <name>parsePromoEdit</name>
        <full_name>parsePromoEdit</full_name>
        <argument line="2399">
          <name>$insert</name>
          <default></default>
          <type>\mysqli_stmt</type>
        </argument>
        <argument line="2399">
          <name>$update</name>
          <default></default>
          <type>\mysqli_stmt</type>
        </argument>
        <argument line="2399">
          <name>$delete</name>
          <default></default>
          <type>\mysqli_stmt</type>
        </argument>
        <argument line="2399">
          <name>$header</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="2399">
          <name>$input</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="2399">
          <name>$achiev</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2443" package="Default">
        <name>parseWholeEdit</name>
        <full_name>parseWholeEdit</full_name>
        <docblock line="2435">
          <description>Parses and inputs a complete member promotion report.</description>
          <long-description>&lt;p&gt;Hands the input 1 achievement at a time to $this-&gt;parsePromoEdit() to parse all inputs.&lt;/p&gt;</long-description>
          <tag line="2435" name="param" description="the database connection" type="\type" variable="$ident">
            <type by_reference="false">\type</type>
          </tag>
          <tag line="2435" name="param" description="the input array from POST or other submission method" type="array" variable="$input">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2443">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2443">
          <name>$input</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2481" package="Default">
        <name>checkPassing</name>
        <full_name>checkPassing</full_name>
        <docblock line="2475">
          <description>Checks if all requirements for promotion are passed</description>
          <long-description></long-description>
          <tag line="2475" name="param" description="the database connection" type="\mysqli" variable="$ident">
            <type by_reference="false">\mysqli</type>
          </tag>
          <tag line="2475" name="param" description="the date for the promotion" type="\dateTime" variable="$date">
            <type by_reference="false">\dateTime</type>
          </tag>
          <tag line="2475" name="return" description="true if and only if all requirements are passed false otherwise" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="2481">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2481">
          <name>$date</name>
          <default>null</default>
          <type>\DateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2501" package="Default">
        <name>check_promotion_wait</name>
        <full_name>check_promotion_wait</full_name>
        <docblock line="2491">
          <description>Checks if there is the regulation required waiting period between a promtion
and the one before it.</description>
          <long-description></long-description>
          <tag line="2491" name="param" description="the databse connection" type="\type" variable="$ident">
            <type by_reference="false">\type</type>
          </tag>
          <tag line="2491" name="param" description="the achievement your checking for" type="\type" variable="$achiev">
            <type by_reference="false">\type</type>
          </tag>
          <tag line="2491" name="param" description="the date to check for this" type="\dateTime" variable="$date">
            <type by_reference="false">\dateTime</type>
          </tag>
          <tag line="2491" name="return" description="returns true if enough time has passed, otherwise returns a dateTime of when it will&#10;be enough time" type="\booleann|\dateTime">
            <type by_reference="false">\booleann</type>
            <type by_reference="false">\dateTime</type>
          </tag>
        </docblock>
        <argument line="2501">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2501">
          <name>$achiev</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="2501">
          <name>$date</name>
          <default>null</default>
          <type>\DateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2526" package="Default">
        <name>retrieveCPFTrequire</name>
        <full_name>retrieveCPFTrequire</full_name>
        <argument line="2526">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2526">
          <name>$date</name>
          <default>null</default>
          <type>\DateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2545" package="Default">
        <name>get_age</name>
        <full_name>get_age</full_name>
        <argument line="2545">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2545">
          <name>$date</name>
          <default>null</default>
          <type>\DateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2558" package="Default">
        <name>get_phase</name>
        <full_name>get_phase</full_name>
        <argument line="2558">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2566" package="Default">
        <name>get_achievement</name>
        <full_name>get_achievement</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2577" package="Default">
        <name>promote</name>
        <full_name>promote</full_name>
        <docblock line="2569">
          <description>Enters a member promotion.</description>
          <long-description>&lt;p&gt;If promotion is most recent update member records&lt;/p&gt;</long-description>
          <tag line="2569" name="param" description="the achievement the promotion's for" type="String" variable="$achiev">
            <type by_reference="false">String</type>
          </tag>
          <tag line="2569" name="param" description="the date of the promotion" type="\dateTime" variable="$date">
            <type by_reference="false">\dateTime</type>
          </tag>
          <tag line="2569" name="param" description="the database connection" type="\mysqli" variable="$ident">
            <type by_reference="false">\mysqli</type>
          </tag>
          <tag line="2569" name="return" description="True on success false on failure" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="2577">
          <name>$achiev</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2577">
          <name>$date</name>
          <default></default>
          <type>\dateTime</type>
        </argument>
        <argument line="2577">
          <name>$ident</name>
          <default></default>
          <type>\mysqli</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2620" package="Default">
        <name>get_next_achiev</name>
        <full_name>get_next_achiev</full_name>
        <docblock line="2615">
          <description></description>
          <long-description></long-description>
          <tag line="2615" name="param" description="the ident for the" type="\type" variable="$ident">
            <type by_reference="false">\type</type>
          </tag>
          <tag line="2615" name="return" description="the next achievement code false on an error" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="2620">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2631" package="Default">
        <name>display_Emergency</name>
        <full_name>display_Emergency</full_name>
        <docblock line="2628">
          <description>displays the emergency contact information in tabular form the emergency contact report</description>
          <long-description></long-description>
        </docblock>
        <argument line="2631">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2645" package="Default">
        <name>reload</name>
        <full_name>reload</full_name>
        <docblock line="2641">
          <description>Reloads all the membership information from the database</description>
          <long-description></long-description>
          <tag line="2641" name="param" description="the database connection" type="\mysqli" variable="$ident">
            <type by_reference="false">\mysqli</type>
          </tag>
        </docblock>
        <argument line="2645">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2660" package="Default">
        <name>hash_password</name>
        <full_name>hash_password</full_name>
        <docblock line="2650">
          <description>Creates a password hash.</description>
          <long-description>&lt;p&gt;Creates a SHA512 hash from the password, salted with the member's capid,
and the passed salt.&lt;/p&gt;</long-description>
          <tag line="2650" name="param" description="the password to create a hash from" type="\type" variable="$pass">
            <type by_reference="false">\type</type>
          </tag>
          <tag line="2650" name="param" description="the salt to add to the password" type="\type" variable="$salt">
            <type by_reference="false">\type</type>
          </tag>
          <tag line="2650" name="return" description="128 digit hash" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="2660">
          <name>$pass</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2660">
          <name>$salt</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2676" package="Default">
        <name>check_password</name>
        <full_name>check_password</full_name>
        <docblock line="2664">
          <description>Verifies the user provided the right password</description>
          <long-description>&lt;p&gt;Uses member::has_password() to create a password hash, and compares it to
the hash in the member table&lt;/p&gt;</long-description>
          <tag line="2664" name="param" description="the database connection" type="\mysqli" variable="$ident">
            <type by_reference="false">\mysqli</type>
          </tag>
          <tag line="2664" name="param" description="the password to check" type="String" variable="$pass">
            <type by_reference="false">String</type>
          </tag>
          <tag line="2664" name="param" description="the system salt" type="String" variable="$salt">
            <type by_reference="false">String</type>
          </tag>
          <tag line="2664" name="return" description="true if it matches false otherwise" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="2676">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2676">
          <name>$pass</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2676">
          <name>$salt</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2689" package="Default">
        <name>set_password</name>
        <full_name>set_password</full_name>
        <docblock line="2682">
          <description>Changes the password in the database.</description>
          <long-description></long-description>
          <tag line="2682" name="param" description="the database connection" type="\mysqli" variable="$ident">
            <type by_reference="false">\mysqli</type>
          </tag>
          <tag line="2682" name="param" description="the hash of the password from hash_password()" type="String" variable="$hash">
            <type by_reference="false">String</type>
          </tag>
          <tag line="2682" name="return" description="true on success." type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="2689">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2689">
          <name>$hash</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2699" package="Default">
        <name>check_pass_life</name>
        <full_name>check_pass_life</full_name>
        <docblock line="2693">
          <description>Checks if the member's password is expired</description>
          <long-description></long-description>
          <tag line="2693" name="param" description="the database connection" type="\mysqli" variable="$ident">
            <type by_reference="false">\mysqli</type>
          </tag>
          <tag line="2693" name="return" description="true if the password is expired, otherwise the number of days to the expiration" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="2699">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2714" package="Default">
        <name>check_terminated</name>
        <full_name>check_terminated</full_name>
        <docblock line="2708">
          <description>Checks if a member's membership is terminated</description>
          <long-description></long-description>
          <tag line="2708" name="param" description="the database connection" type="\mysqli" variable="$ident">
            <type by_reference="false">\mysqli</type>
          </tag>
          <tag line="2708" name="return" description="true if the member is terminated false if not" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="2714">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2729" package="Default">
        <name>insert_staff_position</name>
        <full_name>insert_staff_position</full_name>
        <docblock line="2722">
          <description>Insert Staff Positions into the database</description>
          <long-description></long-description>
          <tag line="2722" name="param" description="the array of the checked boxes" type="array" variable="$input">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2722" name="param" description="the database connection" type="\type" variable="$ident">
            <type by_reference="false">\type</type>
          </tag>
          <tag line="2722" name="return" description="true success false if fail!" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="2729">
          <name>$input</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="2729">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2745" package="Default">
        <name>get_member_type</name>
        <full_name>get_member_type</full_name>
        <docblock line="2740">
          <description>Returns the member's membership type</description>
          <long-description></long-description>
          <tag line="2740" name="return" description="the member's membership type" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2754" package="Default">
        <name>check_promo_halt</name>
        <full_name>check_promo_halt</full_name>
        <docblock line="2748">
          <description>Checks if there is a promotion halt due to a failed promotion board</description>
          <long-description></long-description>
          <tag line="2748" name="param" description="the database connection" type="\type" variable="$ident">
            <type by_reference="false">\type</type>
          </tag>
          <tag line="2748" name="return" description="true if the promotions are halted, false if otherwise" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="2754">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="2766" package="Default">
      <extends/>
      <name>unit</name>
      <full_name>\unit</full_name>
      <property final="false" static="false" visibility="private" line="2767" namespace="global" package="Default">
        <name>$charter_num</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="2768" namespace="global" package="Default">
        <name>$region</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="2769" namespace="global" package="Default">
        <name>$wing</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2770" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="2770">
          <name>$charter_num</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2770">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2770">
          <name>$region</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="2770">
          <name>$wing</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2782" package="Default">
        <name>getCharter</name>
        <full_name>getCharter</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2785" package="Default">
        <name>insert_unit</name>
        <full_name>insert_unit</full_name>
        <argument line="2785">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2785">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="2790" package="Default">
      <extends/>
      <name>memberType</name>
      <full_name>\memberType</full_name>
      <property final="false" static="false" visibility="private" line="2791" namespace="global" package="Default">
        <name>$code</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="2792" namespace="global" package="Default">
        <name>$name</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2793" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="2793">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2793">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2798" package="Default">
        <name>getCode</name>
        <full_name>getCode</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="2802" package="Default">
      <extends/>
      <name>contact</name>
      <full_name>\contact</full_name>
      <property final="false" static="false" visibility="private" line="2803" namespace="global" package="Default">
        <name>$name</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="2804" namespace="global" package="Default">
        <name>$relation</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="2805" namespace="global" package="Default">
        <name>$phone</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2806" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="2806">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2806">
          <name>$relation</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2806">
          <name>$phone</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2811" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2814" package="Default">
        <name>getRelation</name>
        <full_name>getRelation</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2817" package="Default">
        <name>getRelation_full</name>
        <full_name>getRelation_full</full_name>
        <argument line="2817">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2823" package="Default">
        <name>getPhone</name>
        <full_name>getPhone</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2826" package="Default">
        <name>setName</name>
        <full_name>setName</full_name>
        <argument line="2826">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2829" package="Default">
        <name>setPhone</name>
        <full_name>setPhone</full_name>
        <argument line="2829">
          <name>$phone</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2832" package="Default">
        <name>setRelation</name>
        <full_name>setRelation</full_name>
        <argument line="2832">
          <name>$relation</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="2836" package="Default">
      <extends/>
      <name>relationShip</name>
      <full_name>\relationShip</full_name>
      <property final="false" static="false" visibility="private" line="2837" namespace="global" package="Default">
        <name>$name</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="2838" namespace="global" package="Default">
        <name>$code</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2839" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="2839">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2843" package="Default">
        <name>insertRelat</name>
        <full_name>insertRelat</full_name>
        <argument line="2843">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2843">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2847" package="Default">
        <name>code_get</name>
        <full_name>code_get</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="2851" package="Default">
      <extends/>
      <name>visitor</name>
      <full_name>\visitor</full_name>
      <property final="false" static="false" visibility="private" line="2852" namespace="global" package="Default">
        <name>$Fname</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="2853" namespace="global" package="Default">
        <name>$Lname</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="2854" namespace="global" package="Default">
        <name>$contName</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="2855" namespace="global" package="Default">
        <name>$contPhone</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="public" line="2856" namespace="global" package="Default">
        <name>$badInput</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2857" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="2857">
          <name>$Fname</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2857">
          <name>$Lname</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2861" package="Default">
        <name>getRestofFields</name>
        <full_name>getRestofFields</full_name>
        <argument line="2861">
          <name>$page</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2864" package="Default">
        <name>setContName</name>
        <full_name>setContName</full_name>
        <argument line="2864">
          <name>$contName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2867" package="Default">
        <name>setContPhone</name>
        <full_name>setContPhone</full_name>
        <argument line="2867">
          <name>$contPhone</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2870" package="Default">
        <name>insert</name>
        <full_name>insert</full_name>
        <argument line="2870">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2870">
          <name>$message</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="2875" package="Default">
      <extends/>
      <name>searched_member</name>
      <full_name>\searched_member</full_name>
      <property final="false" static="false" visibility="private" line="2876" namespace="global" package="Default">
        <name>$member</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="2877" namespace="global" package="Default">
        <name>$percent_match</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="2878" namespace="global" package="Default">
        <name>$capid_match</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2879" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="2879">
          <name>$found_capid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2879">
          <name>$search_capid</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2879">
          <name>$search_name_first</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2879">
          <name>$search_name_last</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2879">
          <name>$ident</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2890" package="Default">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2894" package="Default">
        <name>get_member</name>
        <full_name>get_member</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2897" package="Default">
        <name>recalc_match</name>
        <full_name>recalc_match</full_name>
        <argument line="2897">
          <name>$search_name_first</name>
          <default></default>
          <type/>
        </argument>
        <argument line="2897">
          <name>$search_name_last</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2904" package="Default">
        <name>match_name_last</name>
        <full_name>match_name_last</full_name>
        <argument line="2904">
          <name>$search</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2909" package="Default">
        <name>match_name_first</name>
        <full_name>match_name_first</full_name>
        <argument line="2909">
          <name>$search</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2914" package="Default">
        <name>match_capid</name>
        <full_name>match_capid</full_name>
        <argument line="2914">
          <name>$search</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2925" package="Default">
        <name>get_match</name>
        <full_name>get_match</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2928" package="Default">
        <name>get_capid</name>
        <full_name>get_capid</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2931" package="Default">
        <name>get_name</name>
        <full_name>get_name</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="1265" code="50014">Name of argument $tester does not match with the DocBlock's name $code in \promoRequireInput()</error>
      <error line="1265" code="50015">Argument $code is missing from the Docblock of \promoRequireInput()</error>
      <error line="1403" code="50014">Name of argument $ident does not match with the DocBlock's name $requirements in \verifyCPFT()</error>
      <error line="1403" code="50014">Name of argument $requirements does not match with the DocBlock's name $actual in \verifyCPFT()</error>
      <error line="1403" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $actual in \verifyCPFT()</error>
      <error line="1523" code="50018">No DocBlock was found for property $capid</error>
      <error line="1524" code="50018">No DocBlock was found for property $name_last</error>
      <error line="1525" code="50018">No DocBlock was found for property $name_first</error>
      <error line="1526" code="50018">No DocBlock was found for property $gender</error>
      <error line="1527" code="50018">No DocBlock was found for property $DoB</error>
      <error line="1528" code="50018">No DocBlock was found for property $memberType</error>
      <error line="1529" code="50018">No DocBlock was found for property $achievement</error>
      <error line="1530" code="50018">No DocBlock was found for property $text_set</error>
      <error line="1531" code="50018">No DocBlock was found for property $unit</error>
      <error line="1532" code="50018">No DocBlock was found for property $Date_of_Join</error>
      <error line="1533" code="50018">No DocBlock was found for property $emergencyContacts</error>
      <error line="1534" code="50018">No DocBlock was found for property $date_terminated</error>
      <error line="1535" code="50018">No DocBlock was found for property $badInput</error>
      <error line="1536" code="50018">No DocBlock was found for property $isEmpty</error>
      <error line="1537" code="50018">No DocBlock was found for property $initLevel</error>
      <error line="1538" code="50018">No DocBlock was found for property $promoRecord</error>
      <error line="1574" code="50010">No DocBlock was found for method addEmergencyContact()</error>
      <error line="1577" code="50010">No DocBlock was found for method addEmeregencyContactArray()</error>
      <error line="1589" code="50010">No DocBlock was found for method insertMember()</error>
      <error line="1600" code="50010">No DocBlock was found for method insertEmergency()</error>
      <error line="1614" code="50010">No DocBlock was found for method sign_in()</error>
      <error line="1623" code="50010">No DocBlock was found for method emergency_get()</error>
      <error line="1630" code="50010">No DocBlock was found for method unit_set()</error>
      <error line="1633" code="50010">No DocBlock was found for method replaceOther()</error>
      <error line="1640" code="50010">No DocBlock was found for method exists()</error>
      <error line="1643" code="50010">No DocBlock was found for method getCapid()</error>
      <error line="1646" code="50010">No DocBlock was found for method getName_first()</error>
      <error line="1649" code="50010">No DocBlock was found for method getName_Last()</error>
      <error line="1652" code="50010">No DocBlock was found for method getGrade()</error>
      <error line="1666" code="50010">No DocBlock was found for method testSign_up()</error>
      <error line="1712" code="50010">No DocBlock was found for method signUp()</error>
      <error line="1727" code="50010">No DocBlock was found for method promotionReport()</error>
      <error line="1794" code="50010">No DocBlock was found for method editInformation()</error>
      <error line="1807" code="50010">No DocBlock was found for method editContact()</error>
      <error line="1832" code="50010">No DocBlock was found for method init()</error>
      <error line="1890" code="50010">No DocBlock was found for method editFields()</error>
      <error line="1921" code="50010">No DocBlock was found for method updateContact()</error>
      <error line="1930" code="50010">No DocBlock was found for method insertSingleContact()</error>
      <error line="1938" code="50010">No DocBlock was found for method updateFields()</error>
      <error line="1950" code="50010">No DocBlock was found for method approveFields()</error>
      <error line="1978" code="50010">No DocBlock was found for method massUpdateFields()</error>
      <error line="2001" code="50010">No DocBlock was found for method saveUpdates()</error>
      <error line="2016" code="50010">No DocBlock was found for method getPicture()</error>
      <error line="2019" code="50010">No DocBlock was found for method get_full_memberType()</error>
      <error line="2027" code="50010">No DocBlock was found for method get_leader_text()</error>
      <error line="2035" code="50010">No DocBlock was found for method get_gender()</error>
      <error line="2043" code="50010">No DocBlock was found for method general_info()</error>
      <error line="2054" code="50010">No DocBlock was found for method display_Contact()</error>
      <error line="2077" code="50010">No DocBlock was found for method attendance_report()</error>
      <error line="2110" code="50010">No DocBlock was found for method promo_board_report()</error>
      <error line="2145" code="50010">No DocBlock was found for method discipline_report()</error>
      <error line="2180" code="50010">No DocBlock was found for method title()</error>
      <error line="2186" code="50010">No DocBlock was found for method staff_position()</error>
      <error line="2221" code="50010">No DocBlock was found for method link_report()</error>
      <error line="2228" code="50010">No DocBlock was found for method get_text()</error>
      <error line="2231" code="50010">No DocBlock was found for method getPromotionInfo()</error>
      <error line="2311" code="50012">No short description for method displayPromoRequest()</error>
      <error line="2399" code="50010">No DocBlock was found for method parsePromoEdit()</error>
      <error line="2475" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $date in checkPassing()</error>
      <error line="2491" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $date in check_promotion_wait()</error>
      <error line="2526" code="50010">No DocBlock was found for method retrieveCPFTrequire()</error>
      <error line="2545" code="50010">No DocBlock was found for method get_age()</error>
      <error line="2558" code="50010">No DocBlock was found for method get_phase()</error>
      <error line="2566" code="50010">No DocBlock was found for method get_achievement()</error>
      <error line="2615" code="50012">No short description for method get_next_achiev()</error>
      <error line="2628" code="50015">Argument $ident is missing from the Docblock of display_Emergency()</error>
      <error line="2766" code="50000">No DocBlock was found for \unit</error>
      <error line="2767" code="50018">No DocBlock was found for property $charter_num</error>
      <error line="2768" code="50018">No DocBlock was found for property $region</error>
      <error line="2769" code="50018">No DocBlock was found for property $wing</error>
      <error line="2770" code="50010">No DocBlock was found for method __construct()</error>
      <error line="2782" code="50010">No DocBlock was found for method getCharter()</error>
      <error line="2785" code="50010">No DocBlock was found for method insert_unit()</error>
      <error line="2790" code="50000">No DocBlock was found for \memberType</error>
      <error line="2791" code="50018">No DocBlock was found for property $code</error>
      <error line="2792" code="50018">No DocBlock was found for property $name</error>
      <error line="2793" code="50010">No DocBlock was found for method __construct()</error>
      <error line="2798" code="50010">No DocBlock was found for method getCode()</error>
      <error line="2802" code="50000">No DocBlock was found for \contact</error>
      <error line="2803" code="50018">No DocBlock was found for property $name</error>
      <error line="2804" code="50018">No DocBlock was found for property $relation</error>
      <error line="2805" code="50018">No DocBlock was found for property $phone</error>
      <error line="2806" code="50010">No DocBlock was found for method __construct()</error>
      <error line="2811" code="50010">No DocBlock was found for method getName()</error>
      <error line="2814" code="50010">No DocBlock was found for method getRelation()</error>
      <error line="2817" code="50010">No DocBlock was found for method getRelation_full()</error>
      <error line="2823" code="50010">No DocBlock was found for method getPhone()</error>
      <error line="2826" code="50010">No DocBlock was found for method setName()</error>
      <error line="2829" code="50010">No DocBlock was found for method setPhone()</error>
      <error line="2832" code="50010">No DocBlock was found for method setRelation()</error>
      <error line="2836" code="50000">No DocBlock was found for \relationShip</error>
      <error line="2837" code="50018">No DocBlock was found for property $name</error>
      <error line="2838" code="50018">No DocBlock was found for property $code</error>
      <error line="2839" code="50010">No DocBlock was found for method __construct()</error>
      <error line="2843" code="50010">No DocBlock was found for method insertRelat()</error>
      <error line="2847" code="50010">No DocBlock was found for method code_get()</error>
      <error line="2851" code="50000">No DocBlock was found for \visitor</error>
      <error line="2852" code="50018">No DocBlock was found for property $Fname</error>
      <error line="2853" code="50018">No DocBlock was found for property $Lname</error>
      <error line="2854" code="50018">No DocBlock was found for property $contName</error>
      <error line="2855" code="50018">No DocBlock was found for property $contPhone</error>
      <error line="2856" code="50018">No DocBlock was found for property $badInput</error>
      <error line="2857" code="50010">No DocBlock was found for method __construct()</error>
      <error line="2861" code="50010">No DocBlock was found for method getRestofFields()</error>
      <error line="2864" code="50010">No DocBlock was found for method setContName()</error>
      <error line="2867" code="50010">No DocBlock was found for method setContPhone()</error>
      <error line="2870" code="50010">No DocBlock was found for method insert()</error>
      <error line="2875" code="50000">No DocBlock was found for \searched_member</error>
      <error line="2876" code="50018">No DocBlock was found for property $member</error>
      <error line="2877" code="50018">No DocBlock was found for property $percent_match</error>
      <error line="2878" code="50018">No DocBlock was found for property $capid_match</error>
      <error line="2879" code="50010">No DocBlock was found for method __construct()</error>
      <error line="2890" code="50010">No DocBlock was found for method __destruct()</error>
      <error line="2894" code="50010">No DocBlock was found for method get_member()</error>
      <error line="2897" code="50010">No DocBlock was found for method recalc_match()</error>
      <error line="2904" code="50010">No DocBlock was found for method match_name_last()</error>
      <error line="2909" code="50010">No DocBlock was found for method match_name_first()</error>
      <error line="2914" code="50010">No DocBlock was found for method match_capid()</error>
      <error line="2925" code="50010">No DocBlock was found for method get_match()</error>
      <error line="2928" code="50010">No DocBlock was found for method get_capid()</error>
      <error line="2931" code="50010">No DocBlock was found for method get_name()</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="Squadron-Manager" full_name="Squadron-Manager"/>
  <package name="Squadron-manager" full_name="Squadron-manager"/>
  <namespace name="global" full_name="global"/>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
